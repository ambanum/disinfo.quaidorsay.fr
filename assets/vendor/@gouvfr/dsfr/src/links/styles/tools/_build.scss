////
/// Links Tools : build
/// @group links
////

%base-link {
  @extend %inline-flex-center;

  overflow: hidden;
  @include z-index(over);
}

@function _sort-sizes($sizes) {
  $sorted-map: (
    md: map_get($sizes, md)
  );

  @each $size, $size-settings in $sizes {
    @if $size != md {
      $sorted-map: map-merge($sorted-map, ($size: $size-settings));
    }
  }

  @return $sorted-map;
}

@mixin _build-link-placeholders($settings, $module, $border-radius:false) {
  $align: #{$module}-align-on-content;
  $sizes: _sort-sizes(map_get($settings, sizes));
  $places: map_get($settings, places);

  %#{$module}--md {
    @extend %base-link;
  }

  @each $size, $size-settings in $sizes {
    @at-root {
      %#{$module}--#{$size} {
        @include _build-link-size($size-settings, $border-radius);
      }

      %#{$align}--#{$size} {
        @include _link-align-on-content($size, null, $size-settings);
      }
    }
  }

  @each $place in $places {
    @each $size, $size-settings in $sizes {
      @at-root {
        %#{$module}--icon-#{$place}--#{$size} {
          @include _build-link-icon($size-settings, $place, $size, $size == md, $place == right);
        }

        %#{$align}--#{$place}--#{$size} {
          @include _link-align-on-content($size, $place, $size-settings);
        }
      }
    }
  }
}

@include _build-link-placeholders($links-settings, link, true);

@mixin _build-link-with-icon-selectors($module, $place, $size, $selector, $align-on-content) {
  $placeholder: '#{$module}--icon-#{$place}--#{$size}';

  @at-root #{$selector} {
    @include has-icon {
      @extend %#{$placeholder};
    }
  }

  @if $align-on-content {
    @at-root &--align-on-content#{$selector} {
      @include has-icon {
        @extend %#{$module}-align-on-content--#{$place}--#{$size};
      }
    }
  }
}

@mixin _build-link($settings, $module, $border-radius:false, $align-on-content: false, $tags:button) {
  $align: #{$module}-align-on-content;
  $sizes: map_get($settings, sizes);
  $places: map_get($settings, places);

  @include disable-link-style;
  @include margin(0);

  @each $size, $size-settings in $sizes {
    $placeholder: #{$module}--#{$size};

    @if $size == md {
      @extend %#{$placeholder};
    }
    @else {
      &--#{$size} {
        @extend %#{$placeholder};
      }
    }
  }

  $not-sided: ':not([class*="#{$module}--icon-"])';

  @if $places != null {
    @each $place in $places {

      @each $size, $size-settings in $sizes {
        @if $place == only {
          @if $size == md {
            @include _build-link-with-icon-selectors($module, $place, $size, '#{&}#{$not-sided}', $align-on-content);
          }
          @else {
            @include _build-link-with-icon-selectors($module, $place, $size, '#{&}--#{$size}#{$not-sided}', $align-on-content);
          }
        }
        @else {
          @if $size == md {
            @include _build-link-with-icon-selectors($module, $place, $size, '#{&}--icon-#{$place}', $align-on-content);
          }
          @else {
            @include _build-link-with-icon-selectors($module, $place, $size, '#{&}--#{$size}#{&}--icon-#{$place}', $align-on-content);
          }
        }
      }
    }
  }
}

@mixin build-link() {
  @include _build-link($links-settings, link, true, true);
}
