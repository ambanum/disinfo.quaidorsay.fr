////
/// Core Tools : Icons
/// @group core
////

/// Return icon size from map
/// @param {String} $size ["md"] - Icon size from `$icon-size-map` (Default to "md" = 16px)
///
/// @example scss - Set icon size to `SM` (12px)
///   .foo {
///     width: icons-size(sm);
///     height: icons-size(sm);
///   }
@function icon-size($size: md) {
  @return px-rem(map-get($icon-size-map, $size));
}

@mixin custom-icons($icon-size:md) {
  @include has-icon {
    @include font-icon(null, $icon-size) {
      @content;
    }
  }
}

$icons-placeholders-generated: false !global;

@mixin generate-icons-placeholder($icons) {
  @if $icons-placeholders-generated != true {
    @at-root {
      @each $icon, $code in $icons {
        %#{$icon} {
          content: "#{$code}";
        }
      }
    }

    $icons-placeholders-generated: true !global;
  }
}

@mixin generate-icons-content($icons) {
  @include generate-icons-placeholder($icons-settings);
  @each $icon, $code in $icons {
    #{ns('fi-' + $icon)} {
      @include before {
        @extend %#{$icon};
      }
    }
  }
}

@mixin font-icon-content($icon, $prepend: '') {
  @include generate-icons-placeholder($icons-settings);
  @if $prepend {
    content: #{$prepend} "#{map-get($icons-settings, $icon)}";
  }
  @else {
    @extend %#{$icon};
  }
}

$has-font-icon: false !global;
@mixin font-icon-placeholder() {
  @if $has-font-icon != true {
    @at-root {
      %font-icon {
        font-family: icons !important;
        font-style: normal;
        font-weight: normal !important;
        font-variant: normal;
        text-transform: none;
        line-height: 1;
      }
      $has-font-icon: true !global;
    }
  }
}

@mixin font-icon($icon:null, $icon-size:md, $pseudo:before, $prepend: '') {
  @include font-icon-placeholder();
  @include _pseudo($pseudo) {
    @extend %font-icon;

    @if $icon-size != null {
      font-size: #{$prepend} icon-size($icon-size);
    }

    @if $icon != null {
      @include font-icon-content($icon, $prepend);
    }

    @content;
  }
}
