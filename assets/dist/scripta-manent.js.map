{"version":3,"sources":["node_modules/regenerator-runtime/runtime.js","node_modules/better-dom/dist/better-dom.js","node_modules/better-dateinput-polyfill/dist/better-dateinput-polyfill.js","node_modules/diff-match-patch/index.js","node_modules/@solid-js/nanostache/dist/_index.mjs","scripta-manent.js"],"names":["WINDOW","window","DOCUMENT","document","HTML","documentElement","ELEMENT_NODE","DOCUMENT_NODE","VENDOR_PREFIXES","SHEET_PROP_NAME","WEBKIT_PREFIX","WebKitAnimationEvent","util$index$$arrayProto","Array","prototype","util$index$$every","every","util$index$$each","forEach","util$index$$filter","filter","util$index$$map","map","util$index$$isArray","slice","isArray","util$index$$keys","Object","keys","util$index$$raf","requestAnimationFrame","util$index$$computeStyle","node","ownerDocument","defaultView","getComputedStyle","util$index$$injectElement","nodeType","getElementsByTagName","appendChild","MethodError","methodName","args","type","url","line","call","String","join","message","DocumentTypeError","$Node","TypeError","toString","valueOf","UNKNOWN_NODE","STYLE_NODE_HTML","$Document","styleNode","createElement","innerHTML","sheet","styleSheet","DocumentProto","$Element","ElementProto","tagName","toLowerCase","index$$DOM","index$$_DOM","DOM","constructor","noConflict","document$create$$reQuick","document$create$$sandbox","document$create$$makeMethod","all","value","arguments","result","it","quickMatch","exec","trim","firstElementChild","removeChild","adoptNode","push","create","createAll","util$selectormatcher$$rquickIs","util$selectormatcher$$propName","concat","p","reduceRight","propName","util$selectormatcher$$default","selector","context","quick","split","found","querySelectorAll","parentNode","nodeName","id","getAttribute","hasAttribute","className","indexOf","i","n","length","document$extend$$extensions","document$extend$$EVENT_TYPE","document$extend$$CSS_IMPORT_TEXT","document$extend$$applyLiveExtension","definition","el","ctr","mixinName","mixinProperty","element$children$$makeMethod","validSelectorType","matcher","children","extend","key","addEventListener","e","target","animationName","stopPropagation","style","setProperty","setTimeout","importStyles","mock","content","applyExtensions","importScripts","_this","_arguments","_len","urls","_key","callback","arg","script","shift","argType","src","onload","async","cssText","lastIndex","cssRules","insertRule","err","child","element$classes$$REGEXP_SPACE","element$classes$$normalizedClass","replace","hasClass","classList","contains","addClass","_this2","_arguments2","_len2","classNames","_key2","add","removeClass","_arguments3","_len3","_key3","remove","toggleClass","force","util$stylehooks$$reDash","util$stylehooks$$hooks","get","set","find","name","str","toUpperCase","prefix","prop","util$stylehooks$$directions","util$stylehooks$$shortCuts","font","padding","dir","margin","float","stylePropName","props","some","index","util$stylehooks$$default","element$manipulation$$makeMethod","fastStrategy","requiresParent","strategy","_this4","fragment","createDocumentFragment","_len4","contents","_key4","insertAdjacentHTML","css","_this3","len","computed","getter","reduce","memo","setter","after","relatedNode","insertBefore","nextSibling","before","prepend","firstChild","append","replaceChild","util$selectorhooks$$default","activeElement","element$traversing$$makeMethod","propertyName","matches","offset","top","left","right","bottom","width","height","docEl","clientTop","clientLeft","scrollTop","pageYOffset","scrollLeft","pageXOffset","boundingRect","getBoundingClientRect","next","prev","nextAll","prevAll","closest","selectedIndex","options","text","textContent","o","selected","empty","util$animationhandler$$TRANSITION_EVENT_TYPE","util$animationhandler$$ANIMATION_EVENT_TYPE","util$animationhandler$$AnimationHandler","eventType","handleEvent","animationDirection","removeEventListener","start","util$animationhandler$$default","element$visibility$$makeMethod","condition","_this5","complete","visibility","parseFloat","show","hide","clone","deepCopy","clonedNode","cloneNode","element","otherNode","compareDocumentPosition","node$find$$REGEXP_QUICK","node$find$$REGEXP_ESCAPE","node$find$$makeMethod","getElementsByClassName","setAttribute","removeAttribute","findAll","util$eventhooks$$hooks","focus","handler","_type","blur","capture","validity","invalid","util$eventhooks$$default","util$eventhandler$$supportsPassive","util$eventhandler$$opts","defineProperty","util$eventhandler$$EventHandler","event","currentTarget","once","unsubscribe","getEventProperty","apply","preventDefault","_arguments4","subscribe","hook","getLastArgument","lastArg","passive","util$eventhandler$$default","fire","detail","canContinue","createEvent","initCustomEvent","dispatchEvent","_handleEvent","util$accessorhooks$$hooks","util$accessorhooks$$default","defaultValue","_this6","on","_this7","delimitersRegex","RegExp","processValue","valueName","values","match","trimmed","ternaryDelimiter0","ternaryDelimiter1","substring","Nanostache","template","m","requestHeaders","method","headers","APIBaseURL","$form_explorer","getElementById","$form_services","$form_typeofdocuments","$form_firstdocumentdate","$form_seconddocumentdate","$inputDates","$datasetVersion","getServices","then","data","populateServices","services","servicesArray","sortedServices","$inputDate","Date","toISOString","initFormEventListener","entries","sortAlphabeticallyServices","sort","a","b","option","Option","dataset","typeofdocuments","sortAlphabeticallyTypeOfDocuments","populateTypeOfDocuments","queryStringData","getQueryStringData","addInURL","selectedOptions","item","popStateHandler","getDatasetVersion","releaseMsgs","lang","translatedDate","dataset_date","toLocaleDateString","year","month","day","dataset_url","async_fetch","fetch","response","ok","json","Error","status","request","Request","getDoc","formData","getFormData","service","firstDocumentDate","doc1","secondDocumentDate","doc2","date","route","encodeURI","error","next_version","substr","submitHandler","onServiceChangeHandler","onTypeOfDocumentChangeHandler","onDateChange","typesofdocuments","sortedTypeOfDocuments","removeLegend","removeNotification","updateFormValues","errogMsg","isSelectOptionExist","typeofdocument","console","log","date1","date2","showNotification","action","Event","cancelable","urlParams","URLSearchParams","location","search","fromEntries","$target","querySelector","URL","searchParams","history","pushState","types","isValidForm","loadDocs","docs","showDiff","showLegend","$legend","$legend_item1","$legend_item2","legendMsg","insertAfter","showDatesInfos","dateToDMY","firstDocumentVersionAtDate","version_at_date","secondDocumentVersionAtDate","msg","notificationsMsgs","dateClosest","nothingToCompare","onlyDocumentDate","FormData","dmp","DiffMatchPatch","diff","diff_main","diffPrettyHtml","prettyHTMLDiff","$diffContent","$diffviewer","$notification","$notification_content","referenceNode","DIFF_DEconstE","html","pattern_amp","pattern_lt","pattern_gt","pattern_para","x","op","DIFF_INSERT","DIFF_EQUAL","dateToFormat","toLocaleString","init","browserSupport"],"mappings":"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","file":"scripta-manent.js","sourceRoot":"../js/open-terms-archive","sourcesContent":["/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n","/**\n * better-dom: Live extension playground\n * @version 4.1.0 Tue, 24 Mar 2020 09:55:50 GMT\n * @link https://github.com/chemerisuk/better-dom\n * @copyright 2020 Maksim Chemerisuk\n * @license MIT\n */\n(function () {\n  \"use strict\";\n  var WINDOW = window;\n  var DOCUMENT = document;\n  var HTML = DOCUMENT.documentElement;\n\n  var UNKNOWN_NODE = 0;\n  var ELEMENT_NODE = DOCUMENT.ELEMENT_NODE;\n  var DOCUMENT_NODE = DOCUMENT.DOCUMENT_NODE;\n  var VENDOR_PREFIXES = [\"Webkit\", \"O\", \"Moz\", \"ms\"];\n  var FAKE_ANIMATION_NAME = \"v__40100__\";\n  var SHEET_PROP_NAME = \"__40100__sheet\";\n\n  var WEBKIT_PREFIX = WINDOW.WebKitAnimationEvent ? \"-webkit-\" : \"\";\n\n  var util$index$$arrayProto = Array.prototype;\n\n  var util$index$$every = util$index$$arrayProto.every;\n  var util$index$$each = util$index$$arrayProto.forEach;\n  var util$index$$filter = util$index$$arrayProto.filter;\n  var util$index$$map = util$index$$arrayProto.map;\n  var util$index$$slice = util$index$$arrayProto.slice;\n  var util$index$$isArray = Array.isArray;\n  var util$index$$keys = Object.keys;\n  var util$index$$raf = WINDOW.requestAnimationFrame;\n\n  function util$index$$computeStyle(node) {\n    return node.ownerDocument.defaultView.getComputedStyle(node);\n  }\n\n  function util$index$$injectElement(node) {\n    if (node && node.nodeType === ELEMENT_NODE) {\n      return node.ownerDocument.getElementsByTagName(\"head\")[0].appendChild(node);\n    }\n  }\n  function MethodError(methodName, args, type) {if (type === void 0) {type = \"$Element\";}\n    var url = \"http://chemerisuk.github.io/better-dom/\" + type + \".html#\" + methodName,\n    line = \"invalid call `\" + type + (type === \"DOM\" ? \".\" : \"#\") + methodName + \"(\";\n\n    line += util$index$$map.call(args, String).join(\", \") + \")`. \";\n\n    this.message = line + \"Check \" + url + \" to verify the arguments\";\n  }\n\n  MethodError.prototype = new TypeError();\n\n  function StaticMethodError(methodName, args) {\n    MethodError.call(this, methodName, args, \"DOM\");\n  }\n\n  StaticMethodError.prototype = new TypeError();\n\n  function DocumentTypeError(methodName, args) {\n    MethodError.call(this, methodName, args, \"$Document\");\n  }\n\n  DocumentTypeError.prototype = new TypeError();\n  function $Node(node) {\n    if (node) {\n      this[0] = node;\n      // use a generated property to store a reference\n      // to the wrapper for circular object binding\n      node[\"__40100__\"] = this;\n    }\n  }\n\n  $Node.prototype = {\n    toString: function toString() {return \"\";},\n    valueOf: function valueOf() {return UNKNOWN_NODE;} // undefined\n  };\n\n  // fake animation for live extensions\n  var STYLE_NODE_HTML = \"@\" + WEBKIT_PREFIX + \"keyframes \" + FAKE_ANIMATION_NAME + \" {from {opacity:.99} to {opacity:1}}\";\n\n  function $Document(node) {\n    if (this instanceof $Document) {\n      // initialize state and all internal properties\n      $Node.call(this, node);\n      // add style element to append required css\n      var styleNode = node.createElement(\"style\");\n      styleNode.innerHTML = STYLE_NODE_HTML;\n      util$index$$injectElement(styleNode);\n      // store sheet object internally to use in importStyles later\n      node[SHEET_PROP_NAME] = styleNode.sheet || styleNode.styleSheet;\n    } else if (node) {\n      // create a new wrapper or return existing object\n      return node[\"__40100__\"] || new $Document(node);\n    } else {\n      return new $Document();\n    }\n  }\n\n  var DocumentProto = new $Node();\n\n  $Document.prototype = DocumentProto;\n\n  DocumentProto.valueOf = function () {\n    var node = this[0];\n    return node ? DOCUMENT_NODE : UNKNOWN_NODE;\n  };\n\n  DocumentProto.toString = function () {return \"#document\";};\n  function $Element(node) {\n    if (this instanceof $Element) {\n      $Node.call(this, node);\n    } else if (node) {\n      // create a new wrapper or return existing object\n      return node[\"__40100__\"] || new $Element(node);\n    } else {\n      return new $Element();\n    }\n  }\n\n  var ElementProto = new $Node();\n\n  $Element.prototype = ElementProto;\n\n  ElementProto.valueOf = function () {\n    var node = this[0];\n    return node ? ELEMENT_NODE : UNKNOWN_NODE;\n  };\n\n  ElementProto.toString = function () {\n    var node = this[0];\n\n    return node ? \"<\" + node.tagName.toLowerCase() + \">\" : \"#unknown\";\n  };\n\n  var index$$DOM = new $Document(WINDOW.document);\n  var index$$_DOM = WINDOW.DOM;\n\n  index$$DOM.constructor = function (node) {\n    var nodeType = node && node.nodeType;\n\n    if (nodeType === ELEMENT_NODE) {\n      return $Element(node);\n    } else if (nodeType === DOCUMENT_NODE) {\n      return $Document(node);\n    } else {\n      return new $Node(node);\n    }\n  };\n\n  index$$DOM.noConflict = function () {\n    if (WINDOW.DOM === index$$DOM) {\n      WINDOW.DOM = index$$_DOM;\n    }\n\n    return index$$DOM;\n  };\n\n  WINDOW.DOM = index$$DOM;\n\n  var document$create$$reQuick = /^<([a-zA-Z-]+)\\/?>$/;\n  var document$create$$sandbox = DOCUMENT.createElement(\"body\");\n\n  function document$create$$makeMethod(all) {\n    return function (value) {\n      var node = this[0];\n\n      if (!node || typeof value !== \"string\") {\n        throw new MethodError(\"create\" + all, arguments);\n      }\n\n      var result = all ? [] : null;\n\n      var quickMatch = !result && document$create$$reQuick.exec(value);\n      if (quickMatch) {\n        return new $Element(node.createElement(quickMatch[1]));\n      }\n\n      document$create$$sandbox.innerHTML = value.trim(); // parse HTML string\n\n      for (var it; it = document$create$$sandbox.firstElementChild;) {\n        document$create$$sandbox.removeChild(it); // detach element from the sandbox\n\n        if (node !== DOCUMENT) {\n          // adopt node for external documents\n          it = node.adoptNode(it);\n        }\n\n        if (result) {\n          result.push(new $Element(it));\n        } else {\n          result = new $Element(it);\n          // need only the first element\n          break;\n        }\n      }\n\n      return result || new $Element();\n    };\n  }\n\n\n  $Document.prototype.create = document$create$$makeMethod(\"\");\n\n  $Document.prototype.createAll = document$create$$makeMethod(\"All\");\n\n  // Helper for css selectors\n\n  var util$selectormatcher$$rquickIs = /^(\\w*)(?:#([\\w\\-]+))?(?:\\[([\\w\\-\\=]+)\\])?(?:\\.([\\w\\-]+))?$/,\n  util$selectormatcher$$propName = VENDOR_PREFIXES.concat(null).\n  map(function (p) {return (p ? p.toLowerCase() + \"M\" : \"m\") + \"atchesSelector\";}).\n  reduceRight(function (propName, p) {return propName || p in HTML && p;}, null);\n\n  var util$selectormatcher$$default = function util$selectormatcher$$default(selector, context) {\n    if (typeof selector !== \"string\") return null;\n\n    var quick = util$selectormatcher$$rquickIs.exec(selector);\n\n    if (quick) {\n      // Quick matching is inspired by jQuery:\n      //   0  1    2   3          4\n      // [ _, tag, id, attribute, class ]\n      if (quick[1]) quick[1] = quick[1].toLowerCase();\n      if (quick[3]) quick[3] = quick[3].split(\"=\");\n      if (quick[4]) quick[4] = \" \" + quick[4] + \" \";\n    }\n\n    return function (node) {\n      var result, found;\n      if (!quick && !util$selectormatcher$$propName) {\n        found = (context || node.ownerDocument).querySelectorAll(selector);\n      }\n\n      for (; node && node.nodeType === 1; node = node.parentNode) {\n        if (quick) {\n          result =\n          (!quick[1] || node.nodeName.toLowerCase() === quick[1]) && (\n          !quick[2] || node.id === quick[2]) && (\n          !quick[3] || (quick[3][1] ? node.getAttribute(quick[3][0]) === quick[3][1] : node.hasAttribute(quick[3][0]))) && (\n          !quick[4] || (\" \" + node.className + \" \").indexOf(quick[4]) >= 0);\n\n        } else {\n          if (util$selectormatcher$$propName) {\n            result = node[util$selectormatcher$$propName](selector);\n          } else {\n            for (var i = 0, n = found.length; i < n; ++i) {\n              var n = found[i];\n\n              if (n === node) return n;\n            }\n          }\n        }\n\n        if (result || !context || node === context) break;\n      }\n\n      return result && node;\n    };\n  };\n\n  // Inspired by trick discovered by Daniel Buchner:\n  // https://github.com/csuwldcat/SelectorListener\n\n  var document$extend$$extensions = [];\n  var document$extend$$EVENT_TYPE = WEBKIT_PREFIX ? \"webkitAnimationStart\" : \"animationstart\";\n  var document$extend$$CSS_IMPORT_TEXT = [\n  WEBKIT_PREFIX + \"animation-name:\" + FAKE_ANIMATION_NAME + \" !important\",\n  WEBKIT_PREFIX + \"animation-duration:1ms !important\"].\n  join(\";\");\n\n  function document$extend$$applyLiveExtension(definition, node) {\n    var el = $Element(node);\n    var ctr = definition.constructor;\n    // apply all element mixins\n    Object.keys(definition).forEach(function (mixinName) {\n      var mixinProperty = definition[mixinName];\n      if (mixinProperty !== ctr) {\n        el[mixinName] = mixinProperty;\n      }\n    });\n\n    if (ctr) ctr.call(el);\n  }\n\n  $Document.prototype.extend = function (selector, definition) {\n    var node = this[0];\n\n    if (!node) return this;\n\n    if (arguments.length === 1 && typeof selector === \"object\") {\n      // handle case when $Document protytype is extended\n      util$index$$keys(selector).forEach(function (key) {\n        $Document.prototype[key] = selector[key];\n      });\n\n      return this;\n    } else if (selector === \"*\") {\n      // handle case when $Element protytype is extended\n      util$index$$keys(definition).forEach(function (key) {\n        $Element.prototype[key] = definition[key];\n      });\n\n      return this;\n    }\n\n    if (typeof definition === \"function\") {\n      definition = { constructor: definition };\n    }\n\n    if (!definition || typeof definition !== \"object\") {\n      throw new DocumentTypeError(\"extend\", arguments);\n    }\n\n    var matcher = util$selectormatcher$$default(selector);\n\n    document$extend$$extensions.push([matcher, definition]);\n    // use capturing to suppress internal animationstart events\n    node.addEventListener(document$extend$$EVENT_TYPE, function (e) {\n      var node = e.target;\n\n      if (e.animationName === FAKE_ANIMATION_NAME && matcher(node)) {\n        e.stopPropagation(); // this is an internal event\n        // prevent any future events\n        node.style.setProperty(WEBKIT_PREFIX + \"animation-name\", \"none\", \"important\");\n\n        document$extend$$applyLiveExtension(definition, node);\n      }\n    }, true);\n\n    // initialize extension manually to make sure that all elements\n    // have appropriate methods before they are used in other DOM.extend\n    // also fix cases when a matched element already has another LE\n    util$index$$each.call(node.querySelectorAll(selector), function (node) {\n      // prevent any future events\n      node.style.setProperty(WEBKIT_PREFIX + \"animation-name\", \"none\", \"important\");\n      // use timeout to invoke constructor safe and async\n      WINDOW.setTimeout(function () {\n        document$extend$$applyLiveExtension(definition, node);\n      }, 0);\n    });\n\n    // subscribe selector to a fake animation\n    this.importStyles(selector, document$extend$$CSS_IMPORT_TEXT);\n  };\n\n  $Document.prototype.mock = function (content) {\n    if (!content) return new $Element();\n\n    var result = this.create(content),\n    applyExtensions = function applyExtensions(node) {\n      document$extend$$extensions.forEach(function (args) {\n        var matcher = args[0];\n        var definition = args[1];\n\n        if (matcher(node)) {\n          document$extend$$applyLiveExtension(definition, node);\n        }\n      });\n\n      util$index$$each.call(node.children, applyExtensions);\n    };\n\n    if (document$extend$$extensions.length) {\n      applyExtensions(result[0]);\n    }\n\n    return result;\n  };\n\n  $Document.prototype.importScripts = function () {var _this = this,_arguments = arguments;for (var _len = arguments.length, urls = new Array(_len), _key = 0; _key < _len; _key++) {urls[_key] = arguments[_key];}\n    var callback = function callback() {\n      var node = _this[0];\n\n      if (!node) return;\n\n      var arg = urls.shift(),\n      argType = typeof arg,\n      script;\n\n      if (argType === \"string\") {\n        script = node.createElement(\"script\");\n        script.src = arg;\n        script.onload = callback;\n        script.async = true;\n\n        util$index$$injectElement(script);\n      } else if (argType === \"function\") {\n        arg();\n      } else if (arg) {\n        throw new DocumentTypeError(\"importScripts\", _arguments);\n      }\n    };\n\n    callback();\n  };\n\n  $Document.prototype.importStyles = function (selector, cssText) {\n    var node = this[0];\n\n    if (!node) return;\n\n    if (!cssText && typeof selector === \"string\") {\n      cssText = selector;\n      selector = \"@media screen\";\n    }\n\n    if (typeof selector !== \"string\" || typeof cssText !== \"string\") {\n      throw new DocumentTypeError(\"importStyles\", arguments);\n    }\n\n    var styleSheet = node[SHEET_PROP_NAME];\n    var lastIndex = styleSheet.cssRules.length;\n    // insert rules one by one:\n    // failed selector does not break others\n    selector.split(\",\").forEach(function (selector) {\n      try {\n        lastIndex = styleSheet.insertRule(selector + \"{\" + cssText + \"}\", lastIndex);\n      } catch (err) {\n        // silently ignore invalid rules\n      }\n    });\n  };\n\n  function element$children$$makeMethod(methodName, validSelectorType) {\n    return function (selector) {\n      if (selector && typeof selector !== validSelectorType) {\n        throw new MethodError(methodName, arguments);\n      }\n\n      var node = this[0];\n      var matcher = util$selectormatcher$$default(selector);\n      var children = node ? node.children : [];\n\n      if (typeof selector === \"number\") {\n        if (selector < 0) {\n          selector = children.length + selector;\n        }\n\n        return $Element(children[selector]);\n      } else {\n        if (matcher) {\n          return util$index$$filter.call(children, matcher).map($Element);\n        } else {\n          return util$index$$map.call(children, $Element);\n        }\n      }\n    };\n  }\n\n  $Element.prototype.child = element$children$$makeMethod(\"child\", \"number\");\n\n  $Element.prototype.children = element$children$$makeMethod(\"children\", \"string\");\n\n  var element$classes$$REGEXP_SPACE = /[\\n\\t\\r]/g;\n  var element$classes$$normalizedClass = function element$classes$$normalizedClass(node) {return (\" \" + node.className + \" \").replace(element$classes$$REGEXP_SPACE, \" \");};\n\n  $Element.prototype.hasClass = function (className) {\n    if (typeof className !== \"string\") {\n      throw new MethodError(\"hasClass\", arguments);\n    }\n\n    var node = this[0];\n    if (!node) return false;\n\n    if (node.classList) {\n      return node.classList.contains(className);\n    } else {\n      return element$classes$$normalizedClass(node).indexOf(\" \" + className + \" \") >= 0;\n    }\n  };\n\n  $Element.prototype.addClass = function () {var _this2 = this,_arguments2 = arguments;for (var _len2 = arguments.length, classNames = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {classNames[_key2] = arguments[_key2];}\n    var node = this[0];\n    if (node) {\n      classNames.forEach(function (className) {\n        if (typeof className !== \"string\") {\n          throw new MethodError(\"addClass\", _arguments2);\n        }\n        if (node.classList) {\n          node.classList.add(className);\n        } else if (!_this2.hasClass(className)) {\n          _this2[0].className += \" \" + className;\n        }\n      });\n    }\n\n    return this;\n  };\n\n  $Element.prototype.removeClass = function () {var _arguments3 = arguments;for (var _len3 = arguments.length, classNames = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {classNames[_key3] = arguments[_key3];}\n    var node = this[0];\n    if (node) {\n      classNames.forEach(function (className) {\n        if (typeof className !== \"string\") {\n          throw new MethodError(\"removeClass\", _arguments3);\n        }\n        if (node.classList) {\n          node.classList.remove(className);\n        } else {\n          node.className = element$classes$$normalizedClass(node).replace(\" \" + className + \" \", \" \").trim();\n        }\n      });\n    }\n\n    return this;\n  };\n\n  $Element.prototype.toggleClass = function (className, force) {\n    if (typeof className !== \"string\") {\n      throw new MethodError(\"toggleClass\", arguments);\n    }\n\n    if (typeof force !== \"boolean\") {\n      force = !this.hasClass(className);\n    }\n\n    var node = this[0];\n    if (node) {\n      if (force) {\n        this.addClass(className);\n      } else {\n        this.removeClass(className);\n      }\n    }\n\n    return force;\n  };\n\n  // Helper for CSS properties access\n\n  var util$stylehooks$$reDash = /\\-./g,\n  util$stylehooks$$hooks = { get: {}, set: {}, find: function find(name, style) {\n      var propName = name.replace(util$stylehooks$$reDash, function (str) {return str[1].toUpperCase();});\n\n      if (!(propName in style)) {\n        propName = VENDOR_PREFIXES.\n        map(function (prefix) {return prefix + propName[0].toUpperCase() + propName.slice(1);}).\n        filter(function (prop) {return prop in style;})[0];\n      }\n\n      return this.get[name] = this.set[name] = propName;\n    } },\n  util$stylehooks$$directions = [\"Top\", \"Right\", \"Bottom\", \"Left\"],\n  util$stylehooks$$shortCuts = {\n    font: [\"fontStyle\", \"fontSize\", \"/\", \"lineHeight\", \"fontFamily\"],\n    padding: util$stylehooks$$directions.map(function (dir) {return \"padding\" + dir;}),\n    margin: util$stylehooks$$directions.map(function (dir) {return \"margin\" + dir;}),\n    \"border-width\": util$stylehooks$$directions.map(function (dir) {return \"border\" + dir + \"Width\";}),\n    \"border-style\": util$stylehooks$$directions.map(function (dir) {return \"border\" + dir + \"Style\";}) };\n\n\n  // normalize float css property\n  util$stylehooks$$hooks.get.float = util$stylehooks$$hooks.set.float = \"cssFloat\";\n\n  // Exclude the following css properties from adding suffix 'px'\n  \"fill-opacity font-weight line-height opacity orphans widows z-index zoom\".split(\" \").forEach(function (propName) {\n    var stylePropName = propName.replace(util$stylehooks$$reDash, function (str) {return str[1].toUpperCase();});\n\n    util$stylehooks$$hooks.get[propName] = stylePropName;\n    util$stylehooks$$hooks.set[propName] = function (value, style) {\n      style[stylePropName] = value.toString();\n    };\n  });\n\n  // normalize property shortcuts\n  util$index$$keys(util$stylehooks$$shortCuts).forEach(function (key) {\n    var props = util$stylehooks$$shortCuts[key];\n\n    util$stylehooks$$hooks.get[key] = function (style) {\n      var result = [],\n      hasEmptyStyleValue = function hasEmptyStyleValue(prop, index) {\n        result.push(prop === \"/\" ? prop : style[prop]);\n\n        return !result[index];\n      };\n\n      return props.some(hasEmptyStyleValue) ? \"\" : result.join(\" \");\n    };\n\n    util$stylehooks$$hooks.set[key] = function (value, style) {\n      if (value && \"cssText\" in style) {\n        // normalize setting a complex property across browsers\n        style.cssText += \";\" + key + \":\" + value;\n      } else {\n        props.forEach(function (name) {return style[name] = typeof value === \"number\" ? value + \"px\" : value.toString();});\n      }\n    };\n  });\n\n  var util$stylehooks$$default = util$stylehooks$$hooks;\n\n  $Element.prototype.css = function (name, value) {var _this3 = this;\n    var len = arguments.length;\n    var node = this[0];\n\n    if (!node) {\n      if (len === 1 && util$index$$isArray(name)) {\n        return {};\n      }\n\n      if (len !== 1 || typeof name !== \"string\") {\n        return this;\n      }\n\n      return;\n    }\n\n    var style = node.style;\n    var computed;\n\n    if (len === 1 && (typeof name === \"string\" || util$index$$isArray(name))) {\n      var strategy = function strategy(name) {\n        var getter = util$stylehooks$$default.get[name] || util$stylehooks$$default.find(name, style),\n        value = typeof getter === \"function\" ? getter(style) : style[getter];\n\n        if (!value) {\n          if (!computed) computed = util$index$$computeStyle(node);\n\n          value = typeof getter === \"function\" ? getter(computed) : computed[getter];\n        }\n\n        return value;\n      };\n\n      if (typeof name === \"string\") {\n        return strategy(name);\n      } else {\n        return name.map(strategy).reduce(function (memo, value, index) {\n          memo[name[index]] = value;\n\n          return memo;\n        }, {});\n      }\n    }\n\n    if (len === 2 && typeof name === \"string\") {\n      var setter = util$stylehooks$$default.set[name] || util$stylehooks$$default.find(name, style);\n\n      if (typeof value === \"function\") {\n        value = value(this);\n      }\n\n      if (value == null) value = \"\";\n\n      if (typeof setter === \"function\") {\n        setter(value, style);\n      } else {\n        style[setter] = typeof value === \"number\" ? value + \"px\" : value.toString();\n      }\n    } else if (len === 1 && name && typeof name === \"object\") {\n      util$index$$keys(name).forEach(function (key) {_this3.css(key, name[key]);});\n    } else {\n      throw new MethodError(\"css\", arguments);\n    }\n\n    return this;\n  };\n\n  function element$manipulation$$makeMethod(fastStrategy, requiresParent, strategy) {\n    return function () {var _this4 = this;\n      var node = this[0];\n\n      if (!node || requiresParent && !node.parentNode) return this;\n\n      // the idea of the algorithm is to construct HTML string\n      // when possible or use document fragment as a fallback to\n      // invoke manipulation using a single method call\n      var fragment = fastStrategy ? \"\" : node.ownerDocument.createDocumentFragment();for (var _len4 = arguments.length, contents = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {contents[_key4] = arguments[_key4];}\n\n      contents.forEach(function (content) {\n        if (typeof content === \"function\") {\n          content = content(_this4);\n        }\n\n        if (typeof content === \"string\") {\n          if (typeof fragment === \"string\") {\n            fragment += content.trim();\n          } else {\n            content = $Document(node.ownerDocument).createAll(content);\n          }\n        } else if (content instanceof $Element) {\n          content = [content];\n        }\n\n        if (util$index$$isArray(content)) {\n          if (typeof fragment === \"string\") {\n            // append existing string to fragment\n            content = $Document(node.ownerDocument).createAll(fragment).concat(content);\n            // fallback to document fragment strategy\n            fragment = node.ownerDocument.createDocumentFragment();\n          }\n\n          content.forEach(function (el) {\n            fragment.appendChild(el[0]);\n          });\n        }\n      });\n\n      if (typeof fragment === \"string\") {\n        node.insertAdjacentHTML(fastStrategy, fragment);\n      } else {\n        strategy(node, fragment);\n      }\n\n      return this;\n    };\n  }\n\n  $Element.prototype.after = element$manipulation$$makeMethod(\"afterend\", true, function (node, relatedNode) {\n    node.parentNode.insertBefore(relatedNode, node.nextSibling);\n  });\n\n  $Element.prototype.before = element$manipulation$$makeMethod(\"beforebegin\", true, function (node, relatedNode) {\n    node.parentNode.insertBefore(relatedNode, node);\n  });\n\n  $Element.prototype.prepend = element$manipulation$$makeMethod(\"afterbegin\", false, function (node, relatedNode) {\n    node.insertBefore(relatedNode, node.firstChild);\n  });\n\n  $Element.prototype.append = element$manipulation$$makeMethod(\"beforeend\", false, function (node, relatedNode) {\n    node.appendChild(relatedNode);\n  });\n\n  $Element.prototype.replace = element$manipulation$$makeMethod(\"\", true, function (node, relatedNode) {\n    node.parentNode.replaceChild(relatedNode, node);\n  });\n\n  $Element.prototype.remove = element$manipulation$$makeMethod(\"\", true, function (node) {\n    node.parentNode.removeChild(node);\n  });\n\n  var util$selectorhooks$$default = {\n    \":focus\": function focus(node) {return node === node.ownerDocument.activeElement;}\n\n    // \":visible\": (node) => !isHidden(node),\n\n    // \":hidden\": isHidden\n  };\n\n  $Element.prototype.matches = function (selector) {\n    if (!selector || typeof selector !== \"string\") {\n      throw new MethodError(\"matches\", arguments);\n    }\n\n    var checker = util$selectorhooks$$default[selector] || util$selectormatcher$$default(selector);\n\n    return !!checker(this[0]);\n  };\n\n  $Element.prototype.offset = function () {\n    var node = this[0];\n    var result = { top: 0, left: 0, right: 0, bottom: 0, width: 0, height: 0 };\n\n    if (node) {\n      var docEl = (node.ownerDocument || node).documentElement;\n      var clientTop = docEl.clientTop;\n      var clientLeft = docEl.clientLeft;\n      var scrollTop = WINDOW.pageYOffset || docEl.scrollTop;\n      var scrollLeft = WINDOW.pageXOffset || docEl.scrollLeft;\n      var boundingRect = node.getBoundingClientRect();\n\n      result.top = boundingRect.top + scrollTop - clientTop;\n      result.left = boundingRect.left + scrollLeft - clientLeft;\n      result.right = boundingRect.right + scrollLeft - clientLeft;\n      result.bottom = boundingRect.bottom + scrollTop - clientTop;\n      result.width = boundingRect.right - boundingRect.left;\n      result.height = boundingRect.bottom - boundingRect.top;\n    }\n\n    return result;\n  };\n\n  function element$traversing$$makeMethod(methodName, propertyName, all) {\n    return function (selector) {\n      if (selector && typeof selector !== \"string\") {\n        throw new MethodError(methodName, arguments);\n      }\n\n      var node = this[0];\n      var result = all ? [] : null;\n\n      if (node) {\n        var matcher = util$selectormatcher$$default(selector);\n        // method closest starts traversing from the element itself\n        // except no selector was specified where it returns parent\n        if (node && (!matcher || methodName !== \"closest\")) {\n          node = node[propertyName];\n        }\n\n        for (var it = node; it; it = it[propertyName]) {\n          if (!matcher || matcher(it)) {\n            if (result) {\n              result.push($Element(it));\n            } else {\n              result = $Element(it);\n              // need only the first element\n              break;\n            }\n          }\n        }\n      }\n\n      return result || new $Element();\n    };\n  }\n\n  $Element.prototype.next = element$traversing$$makeMethod(\"next\", \"nextElementSibling\");\n\n  $Element.prototype.prev = element$traversing$$makeMethod(\"prev\", \"previousElementSibling\");\n\n  $Element.prototype.nextAll = element$traversing$$makeMethod(\"nextAll\", \"nextElementSibling\", true);\n\n  $Element.prototype.prevAll = element$traversing$$makeMethod(\"prevAll\", \"previousElementSibling\", true);\n\n  $Element.prototype.closest = element$traversing$$makeMethod(\"closest\", \"parentNode\");\n\n  $Element.prototype.value = function (content) {\n    var node = this[0];\n\n    if (!node) return content ? this : void 0;\n\n    var tagName = node.tagName;\n\n    if (content === void 0) {\n      if (tagName === \"SELECT\") {\n        return ~node.selectedIndex ? node.options[node.selectedIndex].value : \"\";\n      } else if (tagName === \"OPTION\") {\n        return node.hasAttribute(\"value\") ? node.value : node.text;\n      } else if (tagName === \"INPUT\" || tagName === \"TEXTAREA\") {\n        return node.value;\n      } else {\n        return node.textContent;\n      }\n    } else {\n      switch (tagName) {\n        case \"INPUT\":\n        case \"OPTION\":\n        case \"TEXTAREA\":\n          if (typeof content === \"function\") {\n            content = content(node.value);\n          }\n          node.value = content;\n          break;\n\n        case \"SELECT\":\n          if (typeof content === \"function\") {\n            content = content(node.value);\n          }\n          if (util$index$$every.call(node.options, function (o) {return !(o.selected = o.value === content);})) {\n            node.selectedIndex = -1;\n          }\n          break;\n\n        default:\n          if (typeof content === \"function\") {\n            content = content(node.textContent);\n          }\n          node.textContent = content;}\n\n\n      return this;\n    }\n  };\n\n\n  $Element.prototype.empty = function () {\n    return this.value(\"\");\n  };\n\n  var util$animationhandler$$TRANSITION_EVENT_TYPE = WEBKIT_PREFIX ? \"webkitTransitionEnd\" : \"transitionend\";\n  var util$animationhandler$$ANIMATION_EVENT_TYPE = WEBKIT_PREFIX ? \"webkitAnimationEnd\" : \"animationend\";\n\n  function util$animationhandler$$AnimationHandler(node, animationName) {\n    this.node = node;\n    this.style = node.style;\n    this.eventType = animationName ? util$animationhandler$$ANIMATION_EVENT_TYPE : util$animationhandler$$TRANSITION_EVENT_TYPE;\n    this.animationName = animationName;\n  }\n\n  util$animationhandler$$AnimationHandler.prototype = {\n    handleEvent: function handleEvent(e) {\n      if (!this.animationName || e.animationName === this.animationName) {\n        if (this.animationName) {\n          this.style.animationName = \"\";\n          this.style.animationDirection = \"\";\n        }\n\n        this.node.removeEventListener(this.eventType, this, true);\n\n        if (typeof this.callback === \"function\") {\n          this.callback();\n        }\n      }\n    },\n    start: function start(callback, animationDirection) {\n      this.callback = callback;\n\n      if (this.animationName) {\n        this.style.animationName = this.animationName;\n        this.style.animationDirection = animationDirection;\n      }\n\n      this.node.addEventListener(this.eventType, this, true);\n    } };\n\n\n  var util$animationhandler$$default = util$animationhandler$$AnimationHandler;\n\n  function element$visibility$$makeMethod(methodName, condition) {\n    return function (animationName, callback) {var _this5 = this;\n      if (typeof animationName !== \"string\") {\n        callback = animationName;\n        animationName = null;\n      }\n\n      if (callback && typeof callback !== \"function\") {\n        throw new MethodError(methodName, arguments);\n      }\n\n      var node = this[0];\n\n      if (!node) return this;\n\n      var computed = util$index$$computeStyle(node);\n      // Determine of we need animation by checking if an element\n      // has non-zero width. Triggers reflow but fixes animation\n      // for new elements inserted into the DOM in some browsers\n\n      if (node && computed.width) {\n        var complete = function complete() {\n          node.style.visibility = condition ? \"hidden\" : \"inherit\";\n\n          if (typeof callback === \"function\") {\n            callback(_this5);\n          }\n        };\n\n        if (!node.ownerDocument.documentElement.contains(node)) {\n          util$index$$raf(complete); // skip animating of detached elements\n        } else if (!animationName && parseFloat(computed[\"transition-duration\"]) === 0) {\n          util$index$$raf(complete); // skip animating with zero transition duration\n        } else if (animationName && parseFloat(computed[\"animation-duration\"]) === 0) {\n          util$index$$raf(complete); // skip animating with zero animation duration\n        } else {\n          // always make an element visible before animation start\n          node.style.visibility = \"visible\";\n\n          new util$animationhandler$$default(node, animationName).\n          start(complete, condition ? \"normal\" : \"reverse\");\n        }\n      }\n      // trigger CSS3 transition if it exists\n      return this.set(\"aria-hidden\", String(condition));\n    };\n  }\n\n  $Element.prototype.show = element$visibility$$makeMethod(\"show\", false);\n\n  $Element.prototype.hide = element$visibility$$makeMethod(\"hide\", true);\n\n  $Node.prototype.clone = function (deepCopy) {\n    if (typeof deepCopy !== \"boolean\") {\n      throw new MethodError(\"clone\", arguments);\n    }\n\n    var node = this[0];\n\n    if (node) {\n      var clonedNode = node.cloneNode(deepCopy);\n\n      if (this instanceof $Element) {\n        return new $Element(clonedNode);\n      } else if (this instanceof $Document) {\n        return new $Document(clonedNode);\n      }\n    }\n\n    return new $Node();\n  };\n\n  $Node.prototype.contains = function (element) {\n    var node = this[0];\n\n    if (!node) return false;\n\n    if (element instanceof $Element) {\n      var otherNode = element[0];\n\n      if (otherNode === node) return true;\n      if (node.contains) {\n        return node.contains(otherNode);\n      } else {\n        return node.compareDocumentPosition(otherNode) & 16;\n      }\n    }\n\n    throw new MethodError(\"contains\", arguments);\n  };\n\n  // big part of code inspired by Sizzle:\n  // https://github.com/jquery/sizzle/blob/master/sizzle.js\n\n  var node$find$$REGEXP_QUICK = /^(?:(\\w+)|\\.([\\w\\-]+))$/;\n  var node$find$$REGEXP_ESCAPE = /'|\\\\/g;\n\n  function node$find$$makeMethod(methodName, all) {\n    return function (selector) {\n      if (typeof selector !== \"string\") {\n        throw new MethodError(methodName, arguments);\n      }\n\n      var node = this[0];\n\n      if (!node) return all ? [] : new $Node();\n\n      var result;\n\n      if (this instanceof $Document || this instanceof $Element) {\n        var quickMatch = node$find$$REGEXP_QUICK.exec(selector);\n\n        if (quickMatch) {\n          if (quickMatch[1]) {\n            // speed-up: \"TAG\"\n            result = node.getElementsByTagName(selector);\n          } else {\n            // speed-up: \".CLASS\"\n            result = node.getElementsByClassName(quickMatch[2]);\n          }\n\n          if (result && !all) result = result[0];\n        } else if (this instanceof $Element) {\n          var id = node.getAttribute(\"id\");\n\n          // qSA works strangely on Element-rooted queries\n          // We can work around this by specifying an extra ID on the root\n          // and working up from there (Thanks to Andrew Dupont for the technique)\n\n          var prefix;\n          if (id) {\n            prefix = id.replace(node$find$$REGEXP_ESCAPE, \"\\\\$&\");\n          } else {\n            prefix = \"___40100__\";\n            // set fake id attribute value\n            node.setAttribute(\"id\", prefix);\n          }\n\n          prefix = \"[id='\" + prefix + \"'] \";\n          selector = prefix + selector.split(\",\").join(\",\" + prefix);\n\n          result = node[\"querySelector\" + all](selector);\n          // cleanup fake id attribute value\n          if (!id) node.removeAttribute(\"id\");\n        } else {\n          result = node[\"querySelector\" + all](selector);\n        }\n      } else {\n        result = node[\"querySelector\" + all](selector);\n      }\n\n      return all ? util$index$$map.call(result, $Element) : $Element(result);\n    };\n  }\n\n  $Node.prototype.find = node$find$$makeMethod(\"find\", \"\");\n\n  $Node.prototype.findAll = node$find$$makeMethod(\"findAll\", \"All\");\n\n  var util$eventhooks$$hooks = {};\n  if (\"onfocusin\" in HTML) {\n    util$eventhooks$$hooks.focus = function (handler) {handler._type = \"focusin\";};\n    util$eventhooks$$hooks.blur = function (handler) {handler._type = \"focusout\";};\n  } else {\n    // firefox doesn't support focusin/focusout events\n    util$eventhooks$$hooks.focus = util$eventhooks$$hooks.blur = function (handler) {\n      handler.options.capture = true;\n    };\n  }\n  if (DOCUMENT.createElement(\"input\").validity) {\n    util$eventhooks$$hooks.invalid = function (handler) {\n      handler.options.capture = true;\n    };\n  }\n\n  var util$eventhooks$$default = util$eventhooks$$hooks;\n\n  // https://github.com/WICG/EventListenerOptions/blob/gh-pages/explainer.md#feature-detection\n  var util$eventhandler$$supportsPassive = false;\n  try {\n    var util$eventhandler$$opts = Object.defineProperty({}, \"passive\", {\n      get: function get() {\n        util$eventhandler$$supportsPassive = true;\n      } });\n\n    WINDOW.addEventListener(\"test\", null, util$eventhandler$$opts);\n  } catch (e) {}\n\n  function util$eventhandler$$EventHandler(context, node, options, args) {\n    this.context = context;\n    this.node = node;\n    this.options = options;\n    this.args = args;\n\n    if (options.selector) {\n      this.matcher = util$selectormatcher$$default(options.selector, node);\n    }\n  }\n\n  util$eventhandler$$EventHandler.prototype = {\n    handleEvent: function handleEvent(e) {\n      this.event = e;\n      // update value of currentTarget if selector exists\n      this.currentTarget = this.matcher ? this.matcher(e.target) : this.node;\n      // early stop when target doesn't match selector\n      if (this.currentTarget) {\n        if (this.options.once === true) {\n          this.unsubscribe();\n        }\n\n        var args = this.args.map(this.getEventProperty, this);\n        // prevent default if handler returns false\n        if (this.callback.apply(this.context, args) === false) {\n          e.preventDefault();\n        }\n      }\n    },\n    getEventProperty: function getEventProperty(name) {var _arguments4 = arguments;\n      var e = this.event;\n      if (name === \"type\") {\n        return this.type;\n      } else if (name === \"target\" || name === \"relatedTarget\") {\n        return $Element(e[name]);\n      } else if (name === \"currentTarget\") {\n        return $Element(this.currentTarget);\n      }\n\n      var value = e[name];\n      if (typeof value === \"function\") {\n        return function () {return value.apply(e, _arguments4);};\n      } else {\n        return value;\n      }\n    },\n    subscribe: function subscribe(type, callback) {\n      var hook = util$eventhooks$$default[type];\n\n      this.type = type;\n      this.callback = callback;\n\n      if (hook) hook(this);\n\n      this.node.addEventListener(this._type || this.type, this, this.getLastArgument());\n    },\n    unsubscribe: function unsubscribe() {\n      this.node.removeEventListener(this._type || this.type, this, this.getLastArgument());\n    },\n    getLastArgument: function getLastArgument() {\n      var lastArg = !!this.options.capture;\n      if (this.options.passive && util$eventhandler$$supportsPassive) {\n        lastArg = { passive: true, capture: lastArg };\n      }\n      return lastArg;\n    } };\n\n\n  var util$eventhandler$$default = util$eventhandler$$EventHandler;\n\n  $Node.prototype.fire = function (type, detail) {\n    var node = this[0];\n    var e, eventType, canContinue;\n\n    if (typeof type === \"string\") {\n      var hook = util$eventhooks$$default[type],\n      handler = { options: {} };\n\n      if (hook) handler = hook(handler) || handler;\n\n      eventType = handler._type || type;\n    } else {\n      throw new MethodError(\"fire\", arguments);\n    }\n\n    if (!node) return true;\n\n    e = (node.ownerDocument || node).createEvent(\"CustomEvent\");\n    e.initCustomEvent(eventType, true, true, detail);\n    canContinue = node.dispatchEvent(e);\n\n    // call native function to trigger default behavior\n    if (canContinue && node[type]) {\n      var _handleEvent = util$eventhandler$$default.prototype.handleEvent;\n      // intercept handleEvent to prevent double event callbacks\n      util$eventhandler$$default.prototype.handleEvent = function (e) {\n        // prevent re-triggering of the current event\n        if (this.type !== type) {\n          return _handleEvent.call(this, e);\n        }\n      };\n\n      node[type]();\n      // restore original method\n      util$eventhandler$$default.prototype.handleEvent = _handleEvent;\n    }\n\n    return canContinue;\n  };\n  var util$accessorhooks$$hooks = { get: {}, set: {} };\n\n  // fix camel cased attributes\n  \"tabIndex readOnly maxLength cellSpacing cellPadding rowSpan colSpan useMap frameBorder contentEditable\".split(\" \").forEach(function (key) {\n    util$accessorhooks$$hooks.get[key.toLowerCase()] = function (node) {return node[key];};\n  });\n\n  // style hook\n  util$accessorhooks$$hooks.get.style = function (node) {return node.style.cssText;};\n  util$accessorhooks$$hooks.set.style = function (node, value) {node.style.cssText = value;};\n  // some browsers don't recognize input[type=email] etc.\n  util$accessorhooks$$hooks.get.type = function (node) {return node.getAttribute(\"type\") || node.type;};\n\n  var util$accessorhooks$$default = util$accessorhooks$$hooks;\n\n  $Node.prototype.get = function (name, defaultValue) {var _this6 = this;\n    var node = this[0];\n    var hook = util$accessorhooks$$default.get[name];\n    var value;\n\n    if (!node) return value;\n\n    if (arguments.length === 0) {\n      return node.innerHTML;\n    }\n\n    if (hook) {\n      value = hook(node, name);\n    } else if (typeof name === \"string\") {\n      if (name in node) {\n        value = node[name];\n      } else if (this instanceof $Element) {\n        value = node.getAttribute(name);\n      } else {\n        value = null;\n      }\n    } else if (util$index$$isArray(name)) {\n      value = name.reduce(function (memo, key) {\n        return memo[key] = _this6.get(key), memo;\n      }, {});\n    } else {\n      throw new MethodError(\"get\", arguments);\n    }\n\n    return value != null ? value : defaultValue;\n  };\n\n  $Node.prototype.on = function (type, options, args, callback) {\n    if (typeof type === \"string\") {\n      if (typeof options === \"string\") {\n        options = { selector: options };\n      } else if (typeof options === \"function\") {\n        callback = options;\n        options = {};\n        args = [];\n      } else if (typeof options === \"object\") {\n        if (util$index$$isArray(options)) {\n          callback = args;\n          args = options;\n          options = {};\n        }\n      }\n\n      if (typeof args === \"function\") {\n        callback = args;\n        args = [];\n      }\n\n      if (options && typeof options === \"object\" && typeof callback === \"function\") {\n        var node = this[0];\n\n        if (!node) return function () {};\n\n        var handler = new util$eventhandler$$default(this, node, options, args);\n        handler.subscribe(type, callback);\n        return function () {return handler.unsubscribe();};\n      }\n    }\n\n    throw new MethodError(\"on\", arguments);\n  };\n\n  $Node.prototype.set = function (name, value) {var _this7 = this;\n    var node = this[0];\n    var len = arguments.length;\n    var hook = util$accessorhooks$$default.set[name];\n\n    if (node) {\n      if (typeof name === \"string\") {\n        if (len === 1) {// innerHTML shortcut\n          value = name;\n          name = \"innerHTML\";\n        }\n\n        if (typeof value === \"function\") {\n          value = value(this.get(name));\n        }\n\n        if (hook) {\n          hook(node, value);\n        } else if (value == null && this instanceof $Element) {\n          node.removeAttribute(name);\n        } else if (name in node) {\n          node[name] = value;\n        } else if (this instanceof $Element) {\n          node.setAttribute(name, value);\n        }\n      } else if (util$index$$isArray(name)) {\n        if (len === 1) {\n          node.textContent = \"\"; // clear node children\n          this.append.apply(this, name);\n        } else {\n          name.forEach(function (key) {_this7.set(key, value);});\n        }\n      } else if (typeof name === \"object\") {\n        util$index$$keys(name).forEach(function (key) {_this7.set(key, name[key]);});\n      } else {\n        throw new MethodError(\"set\", arguments);\n      }\n    }\n\n    return this;\n  };\n})();","/**\n * better-dateinput-polyfill: input[type=date] polyfill for better-dom\n * @version 3.3.1 Thu, 03 Sep 2020 09:59:12 GMT\n * @link https://github.com/chemerisuk/better-dateinput-polyfill\n * @copyright 2020 Maksim Chemerisuk\n * @license MIT\n */\n(function () {\n  \"use strict\";\n\n  /* globals html:false */\n  var MAIN_CSS = \"dateinput-picker{display:inline-block;vertical-align:bottom;overflow:hidden;position:absolute;z-index:1000;width:336px;height:320px;max-height:320px;box-shadow:0 8px 24px #888;background:#fff;opacity:1;-webkit-transform:translate3d(0,0,0);transform:translate3d(0,0,0);-webkit-transform-origin:0 0;transform-origin:0 0;transition:.1s ease-out}dateinput-picker[aria-hidden=true]{opacity:0;-webkit-transform:skew(-25deg) scaleX(.75);transform:skew(-25deg) scaleX(.75);visibility:hidden;height:0}dateinput-picker[aria-expanded=true]{height:220px;max-height:220px}dateinput-picker+input{color:transparent!important;caret-color:transparent!important}dateinput-picker+input::selection{color:rgba(0,0,0,.01);background:none}dateinput-picker+input::-moz-selection{background:none}\";\n  var HTML = DOM.find(\"html\");\n  var DEFAULT_LANGUAGE = HTML.get(\"lang\") || void 0;\n  var DEVICE_TYPE = \"orientation\" in window ? \"mobile\" : \"desktop\";\n\n  var TYPE_SUPPORTED = function () {\n    // use a stronger type support detection that handles old WebKit browsers:\n    // http://www.quirksmode.org/blog/archives/2015/03/better_modern_i.html\n    return DOM.create(\"<input type='date'>\").value(\"_\").value() !== \"_\";\n  }();\n\n  function formatLocalDate(date) {\n    return [date.getFullYear(), (\"0\" + (date.getMonth() + 1)).slice(-2), (\"0\" + date.getDate()).slice(-2)].join(\"-\");\n  }\n\n  function parseLocalDate(value) {\n    var parts = (value || \"?\").split(/\\D/).map(function (s) {\n      return parseInt(s);\n    });\n    var dateValue = new Date(parts[0], parts[1] - 1, parts[2], 0, 0);\n    return isNaN(dateValue.getTime()) ? null : dateValue;\n  }\n\n  var globalFormatters = DOM.findAll(\"meta[name^='data-format:']\").reduce(function (globalFormatters, meta) {\n    var key = meta.get(\"name\").split(\":\")[1].trim();\n    var formatOptions = JSON.parse(meta.get(\"content\"));\n\n    if (key) {\n      try {\n        globalFormatters[key] = new window.Intl.DateTimeFormat(DEFAULT_LANGUAGE, formatOptions);\n      } catch (err) {}\n    }\n\n    return globalFormatters;\n  }, {});\n  DOM.extend(\"input[type=date]\", {\n    constructor: function constructor() {\n      if (this._isPolyfillEnabled()) return false;\n      var svgTextOptions = this.css([\"color\", \"font-size\", \"font-family\", \"font-style\", \"line-height\", \"padding-left\", \"border-left-width\", \"text-indent\"]);\n      svgTextOptions.dx = [\"padding-left\", \"border-left-width\", \"text-indent\"].map(function (p) {\n        return parseFloat(svgTextOptions[p]);\n      }).reduce(function (a, b) {\n        return a + b;\n      });\n      svgTextOptions.css = [\"font-family\", \"font-style\", \"line-height\", \"font-size\"].map(function (p) {\n        return p + \":\" + svgTextOptions[p];\n      }).join(\";\").replace(/\"/g, \"\"); // FIXME: fix issue in html helper and drop replace below\n\n      this._backgroundTemplate = (\"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\"><text x=\\\"\" + svgTextOptions.dx + \"\\\" y=\\\"50%\\\" dy=\\\".35em\\\" fill=\\\"\" + svgTextOptions.color + \"\\\"></text></svg>\").replace(\"></\", \" style=\\\"\" + svgTextOptions.css + \"\\\"></\");\n      var picker = DOM.create(\"<dateinput-picker tabindex='-1'>\"); // store reference to the input\n\n      picker._parentInput = this; // add <dateinput-picker> to the document\n\n      this.before(picker.hide()); // store reference to the picker\n\n      this._picker = picker;\n\n      var resetDisplayedText = this._syncDisplayedText.bind(this, \"defaultValue\");\n\n      var updateDisplayedText = this._syncDisplayedText.bind(this, \"value\"); // patch value property for the input element\n\n\n      var valueDescriptor = Object.getOwnPropertyDescriptor(HTMLInputElement.prototype, \"value\");\n      Object.defineProperty(this[0], \"value\", {\n        configurable: false,\n        enumerable: true,\n        get: valueDescriptor.get,\n        set: this._setValue.bind(this, valueDescriptor.set, updateDisplayedText)\n      });\n      Object.defineProperty(this[0], \"valueAsDate\", {\n        configurable: false,\n        enumerable: true,\n        get: this._getValueAsDate.bind(this),\n        set: this._setValueAsDate.bind(this)\n      }); // sync picker visibility on focus/blur\n\n      this.on(\"change\", updateDisplayedText);\n      this.on(\"focus\", this._focusInput.bind(this));\n      this.on(\"blur\", this._blurInput.bind(this));\n      this.on(\"keydown\", [\"which\"], this._keydownInput.bind(this));\n      this.on(\"click\", this._focusInput.bind(this)); // form events do not trigger any state change\n\n      this.closest(\"form\").on(\"reset\", resetDisplayedText);\n      resetDisplayedText(); // present initial value\n    },\n    _isPolyfillEnabled: function _isPolyfillEnabled() {\n      var polyfillType = this.get(\"data-polyfill\");\n      if (polyfillType === \"none\") return true;\n\n      if (polyfillType && (polyfillType === DEVICE_TYPE || polyfillType === \"all\")) {\n        // remove native browser implementation\n        this.set(\"type\", \"text\"); // force applying the polyfill\n\n        return false;\n      }\n\n      return TYPE_SUPPORTED;\n    },\n    _setValue: function _setValue(setter, updateDisplayedText, value) {\n      var dateValue = parseLocalDate(value);\n\n      if (!dateValue) {\n        value = \"\";\n      } else {\n        var min = parseLocalDate(this.get(\"min\"));\n        var max = parseLocalDate(this.get(\"max\"));\n\n        if (min && dateValue < min) {\n          value = formatLocalDate(min);\n        } else if (max && dateValue > max) {\n          value = formatLocalDate(max);\n        }\n      }\n\n      setter.call(this[0], value);\n      updateDisplayedText();\n    },\n    _getValueAsDate: function _getValueAsDate() {\n      return parseLocalDate(this.value());\n    },\n    _setValueAsDate: function _setValueAsDate(dateValue) {\n      if (dateValue instanceof Date && !isNaN(dateValue.getTime())) {\n        this.value(formatLocalDate(dateValue));\n      }\n    },\n    _syncDisplayedText: function _syncDisplayedText(propName) {\n      var displayText = this.get(propName);\n      var dateValue = parseLocalDate(displayText);\n\n      if (dateValue) {\n        var formatOptions = this.get(\"data-format\");\n        var formatter = globalFormatters[formatOptions];\n\n        try {\n          // set hours to '12' to fix Safari bug in Date#toLocaleString\n          var presentedDate = new Date(dateValue.getFullYear(), dateValue.getMonth(), dateValue.getDate(), 12);\n\n          if (formatter) {\n            displayText = formatter.format(presentedDate);\n          } else {\n            displayText = presentedDate.toLocaleDateString(DEFAULT_LANGUAGE, formatOptions ? JSON.parse(formatOptions) : {});\n          }\n        } catch (err) {}\n      }\n\n      this.css(\"background-image\", \"url('data:image/svg+xml,\" + encodeURIComponent(this._backgroundTemplate.replace(\"></\", \">\" + displayText + \"</\")) + \"')\");\n    },\n    _keydownInput: function _keydownInput(which) {\n      if (which === 13 && this._picker.get(\"aria-hidden\") === \"true\") {\n        // ENTER key should submit form if calendar is hidden\n        return true;\n      }\n\n      if (which === 32) {\n        // SPACE key toggles calendar visibility\n        if (!this.get(\"readonly\")) {\n          this._picker.toggleState(false);\n\n          this._picker.invalidateState();\n\n          if (this._picker.get(\"aria-hidden\") === \"true\") {\n            this._picker.show();\n          } else {\n            this._picker.hide();\n          }\n        }\n      } else if (which === 27 || which === 9 || which === 13) {\n        this._picker.hide(); // ESC, TAB or ENTER keys hide calendar\n\n      } else if (which === 8 || which === 46) {\n        this.empty().fire(\"change\"); // BACKSPACE, DELETE clear value\n      } else if (which === 17) {\n        // CONTROL toggles calendar mode\n        this._picker.toggleState();\n\n        this._picker.invalidateState();\n      } else {\n        var delta;\n\n        if (which === 74 || which === 40) {\n          delta = 7;\n        } else if (which === 75 || which === 38) {\n          delta = -7;\n        } else if (which === 76 || which === 39) {\n          delta = 1;\n        } else if (which === 72 || which === 37) {\n          delta = -1;\n        }\n\n        if (delta) {\n          var currentDate = this.get(\"valueAsDate\") || new Date();\n          var expanded = this._picker.get(\"aria-expanded\") === \"true\";\n\n          if (expanded && (which === 40 || which === 38)) {\n            currentDate.setMonth(currentDate.getMonth() + (delta > 0 ? 4 : -4));\n          } else if (expanded && (which === 37 || which === 39)) {\n            currentDate.setMonth(currentDate.getMonth() + (delta > 0 ? 1 : -1));\n          } else {\n            currentDate.setDate(currentDate.getDate() + delta);\n          }\n\n          this.value(formatLocalDate(currentDate)).fire(\"change\");\n        }\n      } // prevent default action except if it was TAB so\n      // do not allow to change the value manually\n\n\n      return which === 9;\n    },\n    _blurInput: function _blurInput() {\n      this._picker.hide();\n    },\n    _focusInput: function _focusInput() {\n      if (this.get(\"readonly\")) return false;\n      var offset = this.offset();\n\n      var pickerOffset = this._picker.offset();\n\n      var marginTop = offset.height; // #3: move calendar to the top when passing cross browser window bounds\n\n      if (HTML.get(\"clientHeight\") < offset.bottom + pickerOffset.height) {\n        marginTop = -pickerOffset.height;\n      } // always reset picker mode to the default\n\n\n      this._picker.toggleState(false);\n\n      this._picker.invalidateState(); // always recalculate picker top position\n\n\n      this._picker.css(\"margin-top\", marginTop).show();\n    }\n  });\n  DOM.importStyles(MAIN_CSS);\n})();\n(function () {\n  \"use strict\";\n\n  /* globals html:false */\n  var PICKER_CSS = \"body{overflow:hidden}*{font-family:system-ui,-apple-system,Segoe UI,Roboto,Ubuntu,Cantarell,Noto Sans,sans-serif;line-height:2.5rem;text-align:center;cursor:default;-webkit-user-select:none;-ms-user-select:none;user-select:none;margin:0}a{position:absolute;width:3rem;height:2.5rem}a[rel=prev]{left:0}a[rel=next]{right:0}b{display:block;cursor:pointer}table{width:100%;table-layout:fixed;border-spacing:0;border-collapse:collapse;text-align:center;line-height:2.5rem}table+table{position:absolute;top:2.5rem;left:0;opacity:1;transition:.1s ease-out;background:#fff}table+table td{line-height:3.75rem}table+table[aria-hidden=true]{visibility:hidden!important;opacity:0}td,th{padding:0}thead{background:#ddd;font-size:smaller;font-weight:700}[aria-selected=false],[aria-disabled=true]{color:#888}[aria-selected=true]{box-shadow:inset 0 0 0 1px #888}a:hover,td:hover,[aria-disabled=true],[aria-selected=true]{background-color:#f5f5f5}\";\n  var HTML = DOM.find(\"html\");\n  var DEFAULT_LANGUAGE = HTML.get(\"lang\") || void 0;\n  var CLICK_EVENT_TYPE = \"orientation\" in window ? \"touchend\" : \"mousedown\";\n  var SHADOW_DOM_SUPPORTED = !!HTMLElement.prototype.attachShadow;\n\n  var INTL_SUPPORTED = function () {\n    try {\n      new Date().toLocaleString(\"_\");\n    } catch (err) {\n      return err instanceof RangeError;\n    }\n\n    return false;\n  }();\n\n  function repeat(times, fn) {\n    if (typeof fn === \"string\") {\n      return Array(times + 1).join(fn);\n    } else {\n      return Array.apply(null, Array(times)).map(fn).join(\"\");\n    }\n  }\n\n  function ampm(pos, neg) {\n    return DEFAULT_LANGUAGE === \"en-US\" ? pos : neg;\n  }\n\n  function localeWeekday(index) {\n    var date = new Date();\n    date.setDate(date.getDate() - date.getDay() + index + ampm(0, 1));\n    /* istanbul ignore else */\n\n    if (INTL_SUPPORTED) {\n      try {\n        return date.toLocaleDateString(DEFAULT_LANGUAGE, {\n          weekday: \"short\"\n        });\n      } catch (err) {}\n    }\n\n    return date.toUTCString().split(\",\")[0].slice(0, 2);\n  }\n\n  function localeMonth(index) {\n    var date = new Date(25e8 * (index + 1));\n    /* istanbul ignore else */\n\n    if (INTL_SUPPORTED) {\n      try {\n        return date.toLocaleDateString(DEFAULT_LANGUAGE, {\n          month: \"short\"\n        });\n      } catch (err) {}\n    }\n\n    return date.toUTCString().split(\" \")[2];\n  }\n\n  function localeMonthYear(dateValue) {\n    // set hours to '12' to fix Safari bug in Date#toLocaleString\n    var date = new Date(dateValue.getFullYear(), dateValue.getMonth(), 12);\n    /* istanbul ignore else */\n\n    if (INTL_SUPPORTED) {\n      try {\n        return date.toLocaleDateString(DEFAULT_LANGUAGE, {\n          month: \"long\",\n          year: \"numeric\"\n        });\n      } catch (err) {}\n    }\n\n    return date.toUTCString().split(\" \").slice(2, 4).join(\" \");\n  }\n\n  var PICKER_BODY_HTML = \"<a rel=\\\"prev\\\"><svg xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"16\\\" height=\\\"100%\\\" viewBox=\\\"0 0 16 16\\\"><path d=\\\"M11.5 14.06L1 8L11.5 1.94z\\\"/></svg></a><a rel=\\\"next\\\"><svg xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"16\\\" height=\\\"100%\\\" viewBox=\\\"0 0 16 16\\\"><path d=\\\"M15 8L4.5 14.06L4.5 1.94z\\\"/></svg></a><b></b><table><thead>\" + repeat(7, function (_, i) {\n    return \"<th>\" + localeWeekday(i);\n  }) + \"</thead><tbody>\" + repeat(7, \"<tr>\" + repeat(7, \"<td>\") + \"</tr>\") + \"</tbody></table><table><tbody>\" + repeat(3, function (_, i) {\n    return \"<tr>\" + repeat(4, function (_, j) {\n      return \"<td>\" + localeMonth(i * 4 + j);\n    });\n  }) + \"</tbody></table>\";\n  DOM.extend(\"dateinput-picker\", {\n    constructor: function constructor() {\n      var _this = this;\n\n      if (SHADOW_DOM_SUPPORTED) {\n        var shadowRoot = this[0].attachShadow({\n          mode: \"closed\"\n        }); // use set timeout to make sure _parentInput is set\n\n        setTimeout(function () {\n          _this._initContent(DOM.constructor(shadowRoot));\n        }, 0);\n      } else {\n        var IE = \"ScriptEngineMajorVersion\" in window;\n        var object = DOM.create(\"<object type='text/html' width='100%' height='100%'>\"); // non-IE: must be BEFORE the element added to the document\n\n        if (!IE) {\n          object.set(\"data\", \"about:blank\");\n        } // load content when <object> is ready\n\n\n        this.on(\"load\", {\n          capture: true,\n          once: true\n        }, [\"target\"], function (object) {\n          var pickerRoot = DOM.constructor(object.get(\"contentDocument\"));\n\n          _this._initContent(pickerRoot.find(\"body\"));\n        }); // add object element to the document\n\n        this.append(object); // IE: must be AFTER the element added to the document\n\n        if (IE) {\n          object.set(\"data\", \"about:blank\");\n        }\n      }\n    },\n    _initContent: function _initContent(pickerBody) {\n      pickerBody.set(\"<style>\" + PICKER_CSS + \"</style>\" + PICKER_BODY_HTML); // internal references\n\n      this._calendarDays = pickerBody.find(\"table\");\n      this._calendarMonths = pickerBody.find(\"table+table\");\n      this._calendarCaption = pickerBody.find(\"b\"); // picker invalidate handlers\n\n      this._calendarDays.on(\"picker:invalidate\", [\"detail\"], this._invalidateDays.bind(this));\n\n      this._calendarMonths.on(\"picker:invalidate\", [\"detail\"], this._invalidateMonths.bind(this));\n\n      pickerBody.on(\"picker:invalidate\", [\"detail\"], this._invalidateCaption.bind(this)); // picker click handlers\n\n      pickerBody.on(CLICK_EVENT_TYPE, \"a\", [\"currentTarget\"], this._clickPickerButton.bind(this));\n      pickerBody.on(CLICK_EVENT_TYPE, \"td\", [\"target\"], this._clickPickerDay.bind(this));\n\n      this._calendarCaption.on(CLICK_EVENT_TYPE, this._clickCaption.bind(this)); // prevent input from loosing the focus outline\n\n\n      pickerBody.on(CLICK_EVENT_TYPE, function () {\n        return false;\n      });\n\n      this._parentInput.on(\"change\", this.invalidateState.bind(this)); // display calendar for autofocused elements\n\n\n      if (DOM.get(\"activeElement\") === this._parentInput[0]) {\n        this.show();\n      }\n    },\n    _invalidateDays: function _invalidateDays(dateValue) {\n      var month = dateValue.getMonth();\n      var date = dateValue.getDate();\n      var year = dateValue.getFullYear();\n      var min = new Date((this._parentInput.get(\"min\") || \"?\") + \"T00:00\");\n      var max = new Date((this._parentInput.get(\"max\") || \"?\") + \"T00:00\");\n      var iterDate = new Date(year, month, 1); // move to beginning of the first week in current month\n\n      iterDate.setDate(1 - iterDate.getDay() - ampm(1, iterDate.getDay() === 0 ? 7 : 0)); // update days picker\n\n      this._calendarDays.findAll(\"td\").forEach(function (day) {\n        iterDate.setDate(iterDate.getDate() + 1);\n        var mDiff = month - iterDate.getMonth(),\n            selectedValue = null,\n            disabledValue = null;\n        if (year !== iterDate.getFullYear()) mDiff *= -1;\n\n        if (iterDate < min || iterDate > max) {\n          disabledValue = \"true\";\n        } else if (mDiff > 0 || mDiff < 0) {\n          selectedValue = \"false\";\n        } else if (date === iterDate.getDate()) {\n          selectedValue = \"true\";\n        }\n\n        day._ts = iterDate.getTime();\n        day.set(\"aria-selected\", selectedValue);\n        day.set(\"aria-disabled\", disabledValue);\n        day.value(iterDate.getDate());\n      });\n    },\n    _invalidateMonths: function _invalidateMonths(dateValue) {\n      var month = dateValue.getMonth();\n      var year = dateValue.getFullYear();\n      var min = new Date((this._parentInput.get(\"min\") || \"?\") + \"T00:00\");\n      var max = new Date((this._parentInput.get(\"max\") || \"?\") + \"T00:00\");\n      var iterDate = new Date(year, month, 1);\n\n      this._calendarMonths.findAll(\"td\").forEach(function (day, index) {\n        iterDate.setMonth(index);\n        var mDiff = month - iterDate.getMonth(),\n            selectedValue = null;\n\n        if (iterDate < min || iterDate > max) {\n          selectedValue = \"false\";\n        } else if (!mDiff) {\n          selectedValue = \"true\";\n        }\n\n        day._ts = iterDate.getTime();\n        day.set(\"aria-selected\", selectedValue);\n      });\n    },\n    _invalidateCaption: function _invalidateCaption(dateValue) {\n      var captionText = dateValue.getFullYear();\n\n      if (this.get(\"aria-expanded\") !== \"true\") {\n        captionText = localeMonthYear(dateValue);\n      } // update calendar caption\n\n\n      this._calendarCaption.value(captionText);\n    },\n    _clickCaption: function _clickCaption() {\n      this.toggleState();\n      this.invalidateState();\n    },\n    _clickPickerButton: function _clickPickerButton(btn) {\n      var sign = btn.get(\"rel\") === \"next\" ? 1 : -1;\n      var targetDate = this._parentInput.get(\"valueAsDate\") || new Date();\n\n      if (this.get(\"aria-expanded\") === \"true\") {\n        targetDate.setFullYear(targetDate.getFullYear() + sign);\n      } else {\n        targetDate.setMonth(targetDate.getMonth() + sign);\n      }\n\n      this._parentInput.set(\"valueAsDate\", targetDate).fire(\"change\");\n    },\n    _clickPickerDay: function _clickPickerDay(target) {\n      var targetDate;\n\n      if (this.get(\"aria-expanded\") === \"true\") {\n        if (isNaN(target._ts)) {\n          targetDate = new Date();\n        } else {\n          targetDate = new Date(target._ts);\n        } // switch to date calendar mode\n\n\n        this.toggleState(false);\n      } else {\n        if (!isNaN(target._ts)) {\n          targetDate = new Date(target._ts);\n          this.hide();\n        }\n      }\n\n      if (targetDate != null) {\n        this._parentInput.set(\"valueAsDate\", targetDate).fire(\"change\");\n      }\n    },\n    toggleState: function toggleState(expanded) {\n      if (typeof expanded !== \"boolean\") {\n        expanded = this.get(\"aria-expanded\") !== \"true\";\n      }\n\n      this.set(\"aria-expanded\", expanded);\n    },\n    invalidateState: function invalidateState() {\n      var expanded = this.get(\"aria-expanded\") === \"true\";\n      var target = expanded ? this._calendarMonths : this._calendarDays;\n      var dateValue = this._parentInput.get(\"valueAsDate\") || new Date(); // refresh current picker\n\n      target.fire(\"picker:invalidate\", dateValue);\n\n      if (expanded) {\n        this._calendarMonths.show();\n      } else {\n        this._calendarMonths.hide();\n      }\n    }\n  });\n})();","/**\n * Diff Match and Patch\n * Copyright 2018 The diff-match-patch Authors.\n * https://github.com/google/diff-match-patch\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Computes the difference between two texts to create a patch.\n * Applies the patch onto another text, allowing for errors.\n * @author fraser@google.com (Neil Fraser)\n */\n\n/**\n * Class containing the diff, match and patch methods.\n * @constructor\n */\nvar diff_match_patch = function() {\n\n  // Defaults.\n  // Redefine these in your program to override the defaults.\n\n  // Number of seconds to map a diff before giving up (0 for infinity).\n  this.Diff_Timeout = 1.0;\n  // Cost of an empty edit operation in terms of edit characters.\n  this.Diff_EditCost = 4;\n  // At what point is no match declared (0.0 = perfection, 1.0 = very loose).\n  this.Match_Threshold = 0.5;\n  // How far to search for a match (0 = exact location, 1000+ = broad match).\n  // A match this many characters away from the expected location will add\n  // 1.0 to the score (0.0 is a perfect match).\n  this.Match_Distance = 1000;\n  // When deleting a large block of text (over ~64 characters), how close do\n  // the contents have to be to match the expected contents. (0.0 = perfection,\n  // 1.0 = very loose).  Note that Match_Threshold controls how closely the\n  // end points of a delete need to match.\n  this.Patch_DeleteThreshold = 0.5;\n  // Chunk size for context length.\n  this.Patch_Margin = 4;\n\n  // The number of bits in an int.\n  this.Match_MaxBits = 32;\n};\n\n\n//  DIFF FUNCTIONS\n\n\n/**\n * The data structure representing a diff is an array of tuples:\n * [[DIFF_DELETE, 'Hello'], [DIFF_INSERT, 'Goodbye'], [DIFF_EQUAL, ' world.']]\n * which means: delete 'Hello', add 'Goodbye' and keep ' world.'\n */\nvar DIFF_DELETE = -1;\nvar DIFF_INSERT = 1;\nvar DIFF_EQUAL = 0;\n\n/**\n * Class representing one diff tuple.\n * ~Attempts to look like a two-element array (which is what this used to be).~\n * Constructor returns an actual two-element array, to allow destructing @JackuB\n * See https://github.com/JackuB/diff-match-patch/issues/14 for details\n * @param {number} op Operation, one of: DIFF_DELETE, DIFF_INSERT, DIFF_EQUAL.\n * @param {string} text Text to be deleted, inserted, or retained.\n * @constructor\n */\ndiff_match_patch.Diff = function(op, text) {\n  return [op, text];\n};\n\n/**\n * Find the differences between two texts.  Simplifies the problem by stripping\n * any common prefix or suffix off the texts before diffing.\n * @param {string} text1 Old string to be diffed.\n * @param {string} text2 New string to be diffed.\n * @param {boolean=} opt_checklines Optional speedup flag. If present and false,\n *     then don't run a line-level diff first to identify the changed areas.\n *     Defaults to true, which does a faster, slightly less optimal diff.\n * @param {number=} opt_deadline Optional time when the diff should be complete\n *     by.  Used internally for recursive calls.  Users should set DiffTimeout\n *     instead.\n * @return {!Array.<!diff_match_patch.Diff>} Array of diff tuples.\n */\ndiff_match_patch.prototype.diff_main = function(text1, text2, opt_checklines,\n    opt_deadline) {\n  // Set a deadline by which time the diff must be complete.\n  if (typeof opt_deadline == 'undefined') {\n    if (this.Diff_Timeout <= 0) {\n      opt_deadline = Number.MAX_VALUE;\n    } else {\n      opt_deadline = (new Date).getTime() + this.Diff_Timeout * 1000;\n    }\n  }\n  var deadline = opt_deadline;\n\n  // Check for null inputs.\n  if (text1 == null || text2 == null) {\n    throw new Error('Null input. (diff_main)');\n  }\n\n  // Check for equality (speedup).\n  if (text1 == text2) {\n    if (text1) {\n      return [new diff_match_patch.Diff(DIFF_EQUAL, text1)];\n    }\n    return [];\n  }\n\n  if (typeof opt_checklines == 'undefined') {\n    opt_checklines = true;\n  }\n  var checklines = opt_checklines;\n\n  // Trim off common prefix (speedup).\n  var commonlength = this.diff_commonPrefix(text1, text2);\n  var commonprefix = text1.substring(0, commonlength);\n  text1 = text1.substring(commonlength);\n  text2 = text2.substring(commonlength);\n\n  // Trim off common suffix (speedup).\n  commonlength = this.diff_commonSuffix(text1, text2);\n  var commonsuffix = text1.substring(text1.length - commonlength);\n  text1 = text1.substring(0, text1.length - commonlength);\n  text2 = text2.substring(0, text2.length - commonlength);\n\n  // Compute the diff on the middle block.\n  var diffs = this.diff_compute_(text1, text2, checklines, deadline);\n\n  // Restore the prefix and suffix.\n  if (commonprefix) {\n    diffs.unshift(new diff_match_patch.Diff(DIFF_EQUAL, commonprefix));\n  }\n  if (commonsuffix) {\n    diffs.push(new diff_match_patch.Diff(DIFF_EQUAL, commonsuffix));\n  }\n  this.diff_cleanupMerge(diffs);\n  return diffs;\n};\n\n\n/**\n * Find the differences between two texts.  Assumes that the texts do not\n * have any common prefix or suffix.\n * @param {string} text1 Old string to be diffed.\n * @param {string} text2 New string to be diffed.\n * @param {boolean} checklines Speedup flag.  If false, then don't run a\n *     line-level diff first to identify the changed areas.\n *     If true, then run a faster, slightly less optimal diff.\n * @param {number} deadline Time when the diff should be complete by.\n * @return {!Array.<!diff_match_patch.Diff>} Array of diff tuples.\n * @private\n */\ndiff_match_patch.prototype.diff_compute_ = function(text1, text2, checklines,\n    deadline) {\n  var diffs;\n\n  if (!text1) {\n    // Just add some text (speedup).\n    return [new diff_match_patch.Diff(DIFF_INSERT, text2)];\n  }\n\n  if (!text2) {\n    // Just delete some text (speedup).\n    return [new diff_match_patch.Diff(DIFF_DELETE, text1)];\n  }\n\n  var longtext = text1.length > text2.length ? text1 : text2;\n  var shorttext = text1.length > text2.length ? text2 : text1;\n  var i = longtext.indexOf(shorttext);\n  if (i != -1) {\n    // Shorter text is inside the longer text (speedup).\n    diffs = [new diff_match_patch.Diff(DIFF_INSERT, longtext.substring(0, i)),\n             new diff_match_patch.Diff(DIFF_EQUAL, shorttext),\n             new diff_match_patch.Diff(DIFF_INSERT,\n                 longtext.substring(i + shorttext.length))];\n    // Swap insertions for deletions if diff is reversed.\n    if (text1.length > text2.length) {\n      diffs[0][0] = diffs[2][0] = DIFF_DELETE;\n    }\n    return diffs;\n  }\n\n  if (shorttext.length == 1) {\n    // Single character string.\n    // After the previous speedup, the character can't be an equality.\n    return [new diff_match_patch.Diff(DIFF_DELETE, text1),\n            new diff_match_patch.Diff(DIFF_INSERT, text2)];\n  }\n\n  // Check to see if the problem can be split in two.\n  var hm = this.diff_halfMatch_(text1, text2);\n  if (hm) {\n    // A half-match was found, sort out the return data.\n    var text1_a = hm[0];\n    var text1_b = hm[1];\n    var text2_a = hm[2];\n    var text2_b = hm[3];\n    var mid_common = hm[4];\n    // Send both pairs off for separate processing.\n    var diffs_a = this.diff_main(text1_a, text2_a, checklines, deadline);\n    var diffs_b = this.diff_main(text1_b, text2_b, checklines, deadline);\n    // Merge the results.\n    return diffs_a.concat([new diff_match_patch.Diff(DIFF_EQUAL, mid_common)],\n                          diffs_b);\n  }\n\n  if (checklines && text1.length > 100 && text2.length > 100) {\n    return this.diff_lineMode_(text1, text2, deadline);\n  }\n\n  return this.diff_bisect_(text1, text2, deadline);\n};\n\n\n/**\n * Do a quick line-level diff on both strings, then rediff the parts for\n * greater accuracy.\n * This speedup can produce non-minimal diffs.\n * @param {string} text1 Old string to be diffed.\n * @param {string} text2 New string to be diffed.\n * @param {number} deadline Time when the diff should be complete by.\n * @return {!Array.<!diff_match_patch.Diff>} Array of diff tuples.\n * @private\n */\ndiff_match_patch.prototype.diff_lineMode_ = function(text1, text2, deadline) {\n  // Scan the text on a line-by-line basis first.\n  var a = this.diff_linesToChars_(text1, text2);\n  text1 = a.chars1;\n  text2 = a.chars2;\n  var linearray = a.lineArray;\n\n  var diffs = this.diff_main(text1, text2, false, deadline);\n\n  // Convert the diff back to original text.\n  this.diff_charsToLines_(diffs, linearray);\n  // Eliminate freak matches (e.g. blank lines)\n  this.diff_cleanupSemantic(diffs);\n\n  // Rediff any replacement blocks, this time character-by-character.\n  // Add a dummy entry at the end.\n  diffs.push(new diff_match_patch.Diff(DIFF_EQUAL, ''));\n  var pointer = 0;\n  var count_delete = 0;\n  var count_insert = 0;\n  var text_delete = '';\n  var text_insert = '';\n  while (pointer < diffs.length) {\n    switch (diffs[pointer][0]) {\n      case DIFF_INSERT:\n        count_insert++;\n        text_insert += diffs[pointer][1];\n        break;\n      case DIFF_DELETE:\n        count_delete++;\n        text_delete += diffs[pointer][1];\n        break;\n      case DIFF_EQUAL:\n        // Upon reaching an equality, check for prior redundancies.\n        if (count_delete >= 1 && count_insert >= 1) {\n          // Delete the offending records and add the merged ones.\n          diffs.splice(pointer - count_delete - count_insert,\n                       count_delete + count_insert);\n          pointer = pointer - count_delete - count_insert;\n          var subDiff =\n              this.diff_main(text_delete, text_insert, false, deadline);\n          for (var j = subDiff.length - 1; j >= 0; j--) {\n            diffs.splice(pointer, 0, subDiff[j]);\n          }\n          pointer = pointer + subDiff.length;\n        }\n        count_insert = 0;\n        count_delete = 0;\n        text_delete = '';\n        text_insert = '';\n        break;\n    }\n    pointer++;\n  }\n  diffs.pop();  // Remove the dummy entry at the end.\n\n  return diffs;\n};\n\n\n/**\n * Find the 'middle snake' of a diff, split the problem in two\n * and return the recursively constructed diff.\n * See Myers 1986 paper: An O(ND) Difference Algorithm and Its Variations.\n * @param {string} text1 Old string to be diffed.\n * @param {string} text2 New string to be diffed.\n * @param {number} deadline Time at which to bail if not yet complete.\n * @return {!Array.<!diff_match_patch.Diff>} Array of diff tuples.\n * @private\n */\ndiff_match_patch.prototype.diff_bisect_ = function(text1, text2, deadline) {\n  // Cache the text lengths to prevent multiple calls.\n  var text1_length = text1.length;\n  var text2_length = text2.length;\n  var max_d = Math.ceil((text1_length + text2_length) / 2);\n  var v_offset = max_d;\n  var v_length = 2 * max_d;\n  var v1 = new Array(v_length);\n  var v2 = new Array(v_length);\n  // Setting all elements to -1 is faster in Chrome & Firefox than mixing\n  // integers and undefined.\n  for (var x = 0; x < v_length; x++) {\n    v1[x] = -1;\n    v2[x] = -1;\n  }\n  v1[v_offset + 1] = 0;\n  v2[v_offset + 1] = 0;\n  var delta = text1_length - text2_length;\n  // If the total number of characters is odd, then the front path will collide\n  // with the reverse path.\n  var front = (delta % 2 != 0);\n  // Offsets for start and end of k loop.\n  // Prevents mapping of space beyond the grid.\n  var k1start = 0;\n  var k1end = 0;\n  var k2start = 0;\n  var k2end = 0;\n  for (var d = 0; d < max_d; d++) {\n    // Bail out if deadline is reached.\n    if ((new Date()).getTime() > deadline) {\n      break;\n    }\n\n    // Walk the front path one step.\n    for (var k1 = -d + k1start; k1 <= d - k1end; k1 += 2) {\n      var k1_offset = v_offset + k1;\n      var x1;\n      if (k1 == -d || (k1 != d && v1[k1_offset - 1] < v1[k1_offset + 1])) {\n        x1 = v1[k1_offset + 1];\n      } else {\n        x1 = v1[k1_offset - 1] + 1;\n      }\n      var y1 = x1 - k1;\n      while (x1 < text1_length && y1 < text2_length &&\n             text1.charAt(x1) == text2.charAt(y1)) {\n        x1++;\n        y1++;\n      }\n      v1[k1_offset] = x1;\n      if (x1 > text1_length) {\n        // Ran off the right of the graph.\n        k1end += 2;\n      } else if (y1 > text2_length) {\n        // Ran off the bottom of the graph.\n        k1start += 2;\n      } else if (front) {\n        var k2_offset = v_offset + delta - k1;\n        if (k2_offset >= 0 && k2_offset < v_length && v2[k2_offset] != -1) {\n          // Mirror x2 onto top-left coordinate system.\n          var x2 = text1_length - v2[k2_offset];\n          if (x1 >= x2) {\n            // Overlap detected.\n            return this.diff_bisectSplit_(text1, text2, x1, y1, deadline);\n          }\n        }\n      }\n    }\n\n    // Walk the reverse path one step.\n    for (var k2 = -d + k2start; k2 <= d - k2end; k2 += 2) {\n      var k2_offset = v_offset + k2;\n      var x2;\n      if (k2 == -d || (k2 != d && v2[k2_offset - 1] < v2[k2_offset + 1])) {\n        x2 = v2[k2_offset + 1];\n      } else {\n        x2 = v2[k2_offset - 1] + 1;\n      }\n      var y2 = x2 - k2;\n      while (x2 < text1_length && y2 < text2_length &&\n             text1.charAt(text1_length - x2 - 1) ==\n             text2.charAt(text2_length - y2 - 1)) {\n        x2++;\n        y2++;\n      }\n      v2[k2_offset] = x2;\n      if (x2 > text1_length) {\n        // Ran off the left of the graph.\n        k2end += 2;\n      } else if (y2 > text2_length) {\n        // Ran off the top of the graph.\n        k2start += 2;\n      } else if (!front) {\n        var k1_offset = v_offset + delta - k2;\n        if (k1_offset >= 0 && k1_offset < v_length && v1[k1_offset] != -1) {\n          var x1 = v1[k1_offset];\n          var y1 = v_offset + x1 - k1_offset;\n          // Mirror x2 onto top-left coordinate system.\n          x2 = text1_length - x2;\n          if (x1 >= x2) {\n            // Overlap detected.\n            return this.diff_bisectSplit_(text1, text2, x1, y1, deadline);\n          }\n        }\n      }\n    }\n  }\n  // Diff took too long and hit the deadline or\n  // number of diffs equals number of characters, no commonality at all.\n  return [new diff_match_patch.Diff(DIFF_DELETE, text1),\n          new diff_match_patch.Diff(DIFF_INSERT, text2)];\n};\n\n\n/**\n * Given the location of the 'middle snake', split the diff in two parts\n * and recurse.\n * @param {string} text1 Old string to be diffed.\n * @param {string} text2 New string to be diffed.\n * @param {number} x Index of split point in text1.\n * @param {number} y Index of split point in text2.\n * @param {number} deadline Time at which to bail if not yet complete.\n * @return {!Array.<!diff_match_patch.Diff>} Array of diff tuples.\n * @private\n */\ndiff_match_patch.prototype.diff_bisectSplit_ = function(text1, text2, x, y,\n    deadline) {\n  var text1a = text1.substring(0, x);\n  var text2a = text2.substring(0, y);\n  var text1b = text1.substring(x);\n  var text2b = text2.substring(y);\n\n  // Compute both diffs serially.\n  var diffs = this.diff_main(text1a, text2a, false, deadline);\n  var diffsb = this.diff_main(text1b, text2b, false, deadline);\n\n  return diffs.concat(diffsb);\n};\n\n\n/**\n * Split two texts into an array of strings.  Reduce the texts to a string of\n * hashes where each Unicode character represents one line.\n * @param {string} text1 First string.\n * @param {string} text2 Second string.\n * @return {{chars1: string, chars2: string, lineArray: !Array.<string>}}\n *     An object containing the encoded text1, the encoded text2 and\n *     the array of unique strings.\n *     The zeroth element of the array of unique strings is intentionally blank.\n * @private\n */\ndiff_match_patch.prototype.diff_linesToChars_ = function(text1, text2) {\n  var lineArray = [];  // e.g. lineArray[4] == 'Hello\\n'\n  var lineHash = {};   // e.g. lineHash['Hello\\n'] == 4\n\n  // '\\x00' is a valid character, but various debuggers don't like it.\n  // So we'll insert a junk entry to avoid generating a null character.\n  lineArray[0] = '';\n\n  /**\n   * Split a text into an array of strings.  Reduce the texts to a string of\n   * hashes where each Unicode character represents one line.\n   * Modifies linearray and linehash through being a closure.\n   * @param {string} text String to encode.\n   * @return {string} Encoded string.\n   * @private\n   */\n  function diff_linesToCharsMunge_(text) {\n    var chars = '';\n    // Walk the text, pulling out a substring for each line.\n    // text.split('\\n') would would temporarily double our memory footprint.\n    // Modifying text would create many large strings to garbage collect.\n    var lineStart = 0;\n    var lineEnd = -1;\n    // Keeping our own length variable is faster than looking it up.\n    var lineArrayLength = lineArray.length;\n    while (lineEnd < text.length - 1) {\n      lineEnd = text.indexOf('\\n', lineStart);\n      if (lineEnd == -1) {\n        lineEnd = text.length - 1;\n      }\n      var line = text.substring(lineStart, lineEnd + 1);\n\n      if (lineHash.hasOwnProperty ? lineHash.hasOwnProperty(line) :\n          (lineHash[line] !== undefined)) {\n        chars += String.fromCharCode(lineHash[line]);\n      } else {\n        if (lineArrayLength == maxLines) {\n          // Bail out at 65535 because\n          // String.fromCharCode(65536) == String.fromCharCode(0)\n          line = text.substring(lineStart);\n          lineEnd = text.length;\n        }\n        chars += String.fromCharCode(lineArrayLength);\n        lineHash[line] = lineArrayLength;\n        lineArray[lineArrayLength++] = line;\n      }\n      lineStart = lineEnd + 1;\n    }\n    return chars;\n  }\n  // Allocate 2/3rds of the space for text1, the rest for text2.\n  var maxLines = 40000;\n  var chars1 = diff_linesToCharsMunge_(text1);\n  maxLines = 65535;\n  var chars2 = diff_linesToCharsMunge_(text2);\n  return {chars1: chars1, chars2: chars2, lineArray: lineArray};\n};\n\n\n/**\n * Rehydrate the text in a diff from a string of line hashes to real lines of\n * text.\n * @param {!Array.<!diff_match_patch.Diff>} diffs Array of diff tuples.\n * @param {!Array.<string>} lineArray Array of unique strings.\n * @private\n */\ndiff_match_patch.prototype.diff_charsToLines_ = function(diffs, lineArray) {\n  for (var i = 0; i < diffs.length; i++) {\n    var chars = diffs[i][1];\n    var text = [];\n    for (var j = 0; j < chars.length; j++) {\n      text[j] = lineArray[chars.charCodeAt(j)];\n    }\n    diffs[i][1] = text.join('');\n  }\n};\n\n\n/**\n * Determine the common prefix of two strings.\n * @param {string} text1 First string.\n * @param {string} text2 Second string.\n * @return {number} The number of characters common to the start of each\n *     string.\n */\ndiff_match_patch.prototype.diff_commonPrefix = function(text1, text2) {\n  // Quick check for common null cases.\n  if (!text1 || !text2 || text1.charAt(0) != text2.charAt(0)) {\n    return 0;\n  }\n  // Binary search.\n  // Performance analysis: https://neil.fraser.name/news/2007/10/09/\n  var pointermin = 0;\n  var pointermax = Math.min(text1.length, text2.length);\n  var pointermid = pointermax;\n  var pointerstart = 0;\n  while (pointermin < pointermid) {\n    if (text1.substring(pointerstart, pointermid) ==\n        text2.substring(pointerstart, pointermid)) {\n      pointermin = pointermid;\n      pointerstart = pointermin;\n    } else {\n      pointermax = pointermid;\n    }\n    pointermid = Math.floor((pointermax - pointermin) / 2 + pointermin);\n  }\n  return pointermid;\n};\n\n\n/**\n * Determine the common suffix of two strings.\n * @param {string} text1 First string.\n * @param {string} text2 Second string.\n * @return {number} The number of characters common to the end of each string.\n */\ndiff_match_patch.prototype.diff_commonSuffix = function(text1, text2) {\n  // Quick check for common null cases.\n  if (!text1 || !text2 ||\n      text1.charAt(text1.length - 1) != text2.charAt(text2.length - 1)) {\n    return 0;\n  }\n  // Binary search.\n  // Performance analysis: https://neil.fraser.name/news/2007/10/09/\n  var pointermin = 0;\n  var pointermax = Math.min(text1.length, text2.length);\n  var pointermid = pointermax;\n  var pointerend = 0;\n  while (pointermin < pointermid) {\n    if (text1.substring(text1.length - pointermid, text1.length - pointerend) ==\n        text2.substring(text2.length - pointermid, text2.length - pointerend)) {\n      pointermin = pointermid;\n      pointerend = pointermin;\n    } else {\n      pointermax = pointermid;\n    }\n    pointermid = Math.floor((pointermax - pointermin) / 2 + pointermin);\n  }\n  return pointermid;\n};\n\n\n/**\n * Determine if the suffix of one string is the prefix of another.\n * @param {string} text1 First string.\n * @param {string} text2 Second string.\n * @return {number} The number of characters common to the end of the first\n *     string and the start of the second string.\n * @private\n */\ndiff_match_patch.prototype.diff_commonOverlap_ = function(text1, text2) {\n  // Cache the text lengths to prevent multiple calls.\n  var text1_length = text1.length;\n  var text2_length = text2.length;\n  // Eliminate the null case.\n  if (text1_length == 0 || text2_length == 0) {\n    return 0;\n  }\n  // Truncate the longer string.\n  if (text1_length > text2_length) {\n    text1 = text1.substring(text1_length - text2_length);\n  } else if (text1_length < text2_length) {\n    text2 = text2.substring(0, text1_length);\n  }\n  var text_length = Math.min(text1_length, text2_length);\n  // Quick check for the worst case.\n  if (text1 == text2) {\n    return text_length;\n  }\n\n  // Start by looking for a single character match\n  // and increase length until no match is found.\n  // Performance analysis: https://neil.fraser.name/news/2010/11/04/\n  var best = 0;\n  var length = 1;\n  while (true) {\n    var pattern = text1.substring(text_length - length);\n    var found = text2.indexOf(pattern);\n    if (found == -1) {\n      return best;\n    }\n    length += found;\n    if (found == 0 || text1.substring(text_length - length) ==\n        text2.substring(0, length)) {\n      best = length;\n      length++;\n    }\n  }\n};\n\n\n/**\n * Do the two texts share a substring which is at least half the length of the\n * longer text?\n * This speedup can produce non-minimal diffs.\n * @param {string} text1 First string.\n * @param {string} text2 Second string.\n * @return {Array.<string>} Five element Array, containing the prefix of\n *     text1, the suffix of text1, the prefix of text2, the suffix of\n *     text2 and the common middle.  Or null if there was no match.\n * @private\n */\ndiff_match_patch.prototype.diff_halfMatch_ = function(text1, text2) {\n  if (this.Diff_Timeout <= 0) {\n    // Don't risk returning a non-optimal diff if we have unlimited time.\n    return null;\n  }\n  var longtext = text1.length > text2.length ? text1 : text2;\n  var shorttext = text1.length > text2.length ? text2 : text1;\n  if (longtext.length < 4 || shorttext.length * 2 < longtext.length) {\n    return null;  // Pointless.\n  }\n  var dmp = this;  // 'this' becomes 'window' in a closure.\n\n  /**\n   * Does a substring of shorttext exist within longtext such that the substring\n   * is at least half the length of longtext?\n   * Closure, but does not reference any external variables.\n   * @param {string} longtext Longer string.\n   * @param {string} shorttext Shorter string.\n   * @param {number} i Start index of quarter length substring within longtext.\n   * @return {Array.<string>} Five element Array, containing the prefix of\n   *     longtext, the suffix of longtext, the prefix of shorttext, the suffix\n   *     of shorttext and the common middle.  Or null if there was no match.\n   * @private\n   */\n  function diff_halfMatchI_(longtext, shorttext, i) {\n    // Start with a 1/4 length substring at position i as a seed.\n    var seed = longtext.substring(i, i + Math.floor(longtext.length / 4));\n    var j = -1;\n    var best_common = '';\n    var best_longtext_a, best_longtext_b, best_shorttext_a, best_shorttext_b;\n    while ((j = shorttext.indexOf(seed, j + 1)) != -1) {\n      var prefixLength = dmp.diff_commonPrefix(longtext.substring(i),\n                                               shorttext.substring(j));\n      var suffixLength = dmp.diff_commonSuffix(longtext.substring(0, i),\n                                               shorttext.substring(0, j));\n      if (best_common.length < suffixLength + prefixLength) {\n        best_common = shorttext.substring(j - suffixLength, j) +\n            shorttext.substring(j, j + prefixLength);\n        best_longtext_a = longtext.substring(0, i - suffixLength);\n        best_longtext_b = longtext.substring(i + prefixLength);\n        best_shorttext_a = shorttext.substring(0, j - suffixLength);\n        best_shorttext_b = shorttext.substring(j + prefixLength);\n      }\n    }\n    if (best_common.length * 2 >= longtext.length) {\n      return [best_longtext_a, best_longtext_b,\n              best_shorttext_a, best_shorttext_b, best_common];\n    } else {\n      return null;\n    }\n  }\n\n  // First check if the second quarter is the seed for a half-match.\n  var hm1 = diff_halfMatchI_(longtext, shorttext,\n                             Math.ceil(longtext.length / 4));\n  // Check again based on the third quarter.\n  var hm2 = diff_halfMatchI_(longtext, shorttext,\n                             Math.ceil(longtext.length / 2));\n  var hm;\n  if (!hm1 && !hm2) {\n    return null;\n  } else if (!hm2) {\n    hm = hm1;\n  } else if (!hm1) {\n    hm = hm2;\n  } else {\n    // Both matched.  Select the longest.\n    hm = hm1[4].length > hm2[4].length ? hm1 : hm2;\n  }\n\n  // A half-match was found, sort out the return data.\n  var text1_a, text1_b, text2_a, text2_b;\n  if (text1.length > text2.length) {\n    text1_a = hm[0];\n    text1_b = hm[1];\n    text2_a = hm[2];\n    text2_b = hm[3];\n  } else {\n    text2_a = hm[0];\n    text2_b = hm[1];\n    text1_a = hm[2];\n    text1_b = hm[3];\n  }\n  var mid_common = hm[4];\n  return [text1_a, text1_b, text2_a, text2_b, mid_common];\n};\n\n\n/**\n * Reduce the number of edits by eliminating semantically trivial equalities.\n * @param {!Array.<!diff_match_patch.Diff>} diffs Array of diff tuples.\n */\ndiff_match_patch.prototype.diff_cleanupSemantic = function(diffs) {\n  var changes = false;\n  var equalities = [];  // Stack of indices where equalities are found.\n  var equalitiesLength = 0;  // Keeping our own length var is faster in JS.\n  /** @type {?string} */\n  var lastEquality = null;\n  // Always equal to diffs[equalities[equalitiesLength - 1]][1]\n  var pointer = 0;  // Index of current position.\n  // Number of characters that changed prior to the equality.\n  var length_insertions1 = 0;\n  var length_deletions1 = 0;\n  // Number of characters that changed after the equality.\n  var length_insertions2 = 0;\n  var length_deletions2 = 0;\n  while (pointer < diffs.length) {\n    if (diffs[pointer][0] == DIFF_EQUAL) {  // Equality found.\n      equalities[equalitiesLength++] = pointer;\n      length_insertions1 = length_insertions2;\n      length_deletions1 = length_deletions2;\n      length_insertions2 = 0;\n      length_deletions2 = 0;\n      lastEquality = diffs[pointer][1];\n    } else {  // An insertion or deletion.\n      if (diffs[pointer][0] == DIFF_INSERT) {\n        length_insertions2 += diffs[pointer][1].length;\n      } else {\n        length_deletions2 += diffs[pointer][1].length;\n      }\n      // Eliminate an equality that is smaller or equal to the edits on both\n      // sides of it.\n      if (lastEquality && (lastEquality.length <=\n          Math.max(length_insertions1, length_deletions1)) &&\n          (lastEquality.length <= Math.max(length_insertions2,\n                                           length_deletions2))) {\n        // Duplicate record.\n        diffs.splice(equalities[equalitiesLength - 1], 0,\n                     new diff_match_patch.Diff(DIFF_DELETE, lastEquality));\n        // Change second copy to insert.\n        diffs[equalities[equalitiesLength - 1] + 1][0] = DIFF_INSERT;\n        // Throw away the equality we just deleted.\n        equalitiesLength--;\n        // Throw away the previous equality (it needs to be reevaluated).\n        equalitiesLength--;\n        pointer = equalitiesLength > 0 ? equalities[equalitiesLength - 1] : -1;\n        length_insertions1 = 0;  // Reset the counters.\n        length_deletions1 = 0;\n        length_insertions2 = 0;\n        length_deletions2 = 0;\n        lastEquality = null;\n        changes = true;\n      }\n    }\n    pointer++;\n  }\n\n  // Normalize the diff.\n  if (changes) {\n    this.diff_cleanupMerge(diffs);\n  }\n  this.diff_cleanupSemanticLossless(diffs);\n\n  // Find any overlaps between deletions and insertions.\n  // e.g: <del>abcxxx</del><ins>xxxdef</ins>\n  //   -> <del>abc</del>xxx<ins>def</ins>\n  // e.g: <del>xxxabc</del><ins>defxxx</ins>\n  //   -> <ins>def</ins>xxx<del>abc</del>\n  // Only extract an overlap if it is as big as the edit ahead or behind it.\n  pointer = 1;\n  while (pointer < diffs.length) {\n    if (diffs[pointer - 1][0] == DIFF_DELETE &&\n        diffs[pointer][0] == DIFF_INSERT) {\n      var deletion = diffs[pointer - 1][1];\n      var insertion = diffs[pointer][1];\n      var overlap_length1 = this.diff_commonOverlap_(deletion, insertion);\n      var overlap_length2 = this.diff_commonOverlap_(insertion, deletion);\n      if (overlap_length1 >= overlap_length2) {\n        if (overlap_length1 >= deletion.length / 2 ||\n            overlap_length1 >= insertion.length / 2) {\n          // Overlap found.  Insert an equality and trim the surrounding edits.\n          diffs.splice(pointer, 0, new diff_match_patch.Diff(DIFF_EQUAL,\n              insertion.substring(0, overlap_length1)));\n          diffs[pointer - 1][1] =\n              deletion.substring(0, deletion.length - overlap_length1);\n          diffs[pointer + 1][1] = insertion.substring(overlap_length1);\n          pointer++;\n        }\n      } else {\n        if (overlap_length2 >= deletion.length / 2 ||\n            overlap_length2 >= insertion.length / 2) {\n          // Reverse overlap found.\n          // Insert an equality and swap and trim the surrounding edits.\n          diffs.splice(pointer, 0, new diff_match_patch.Diff(DIFF_EQUAL,\n              deletion.substring(0, overlap_length2)));\n          diffs[pointer - 1][0] = DIFF_INSERT;\n          diffs[pointer - 1][1] =\n              insertion.substring(0, insertion.length - overlap_length2);\n          diffs[pointer + 1][0] = DIFF_DELETE;\n          diffs[pointer + 1][1] =\n              deletion.substring(overlap_length2);\n          pointer++;\n        }\n      }\n      pointer++;\n    }\n    pointer++;\n  }\n};\n\n\n/**\n * Look for single edits surrounded on both sides by equalities\n * which can be shifted sideways to align the edit to a word boundary.\n * e.g: The c<ins>at c</ins>ame. -> The <ins>cat </ins>came.\n * @param {!Array.<!diff_match_patch.Diff>} diffs Array of diff tuples.\n */\ndiff_match_patch.prototype.diff_cleanupSemanticLossless = function(diffs) {\n  /**\n   * Given two strings, compute a score representing whether the internal\n   * boundary falls on logical boundaries.\n   * Scores range from 6 (best) to 0 (worst).\n   * Closure, but does not reference any external variables.\n   * @param {string} one First string.\n   * @param {string} two Second string.\n   * @return {number} The score.\n   * @private\n   */\n  function diff_cleanupSemanticScore_(one, two) {\n    if (!one || !two) {\n      // Edges are the best.\n      return 6;\n    }\n\n    // Each port of this function behaves slightly differently due to\n    // subtle differences in each language's definition of things like\n    // 'whitespace'.  Since this function's purpose is largely cosmetic,\n    // the choice has been made to use each language's native features\n    // rather than force total conformity.\n    var char1 = one.charAt(one.length - 1);\n    var char2 = two.charAt(0);\n    var nonAlphaNumeric1 = char1.match(diff_match_patch.nonAlphaNumericRegex_);\n    var nonAlphaNumeric2 = char2.match(diff_match_patch.nonAlphaNumericRegex_);\n    var whitespace1 = nonAlphaNumeric1 &&\n        char1.match(diff_match_patch.whitespaceRegex_);\n    var whitespace2 = nonAlphaNumeric2 &&\n        char2.match(diff_match_patch.whitespaceRegex_);\n    var lineBreak1 = whitespace1 &&\n        char1.match(diff_match_patch.linebreakRegex_);\n    var lineBreak2 = whitespace2 &&\n        char2.match(diff_match_patch.linebreakRegex_);\n    var blankLine1 = lineBreak1 &&\n        one.match(diff_match_patch.blanklineEndRegex_);\n    var blankLine2 = lineBreak2 &&\n        two.match(diff_match_patch.blanklineStartRegex_);\n\n    if (blankLine1 || blankLine2) {\n      // Five points for blank lines.\n      return 5;\n    } else if (lineBreak1 || lineBreak2) {\n      // Four points for line breaks.\n      return 4;\n    } else if (nonAlphaNumeric1 && !whitespace1 && whitespace2) {\n      // Three points for end of sentences.\n      return 3;\n    } else if (whitespace1 || whitespace2) {\n      // Two points for whitespace.\n      return 2;\n    } else if (nonAlphaNumeric1 || nonAlphaNumeric2) {\n      // One point for non-alphanumeric.\n      return 1;\n    }\n    return 0;\n  }\n\n  var pointer = 1;\n  // Intentionally ignore the first and last element (don't need checking).\n  while (pointer < diffs.length - 1) {\n    if (diffs[pointer - 1][0] == DIFF_EQUAL &&\n        diffs[pointer + 1][0] == DIFF_EQUAL) {\n      // This is a single edit surrounded by equalities.\n      var equality1 = diffs[pointer - 1][1];\n      var edit = diffs[pointer][1];\n      var equality2 = diffs[pointer + 1][1];\n\n      // First, shift the edit as far left as possible.\n      var commonOffset = this.diff_commonSuffix(equality1, edit);\n      if (commonOffset) {\n        var commonString = edit.substring(edit.length - commonOffset);\n        equality1 = equality1.substring(0, equality1.length - commonOffset);\n        edit = commonString + edit.substring(0, edit.length - commonOffset);\n        equality2 = commonString + equality2;\n      }\n\n      // Second, step character by character right, looking for the best fit.\n      var bestEquality1 = equality1;\n      var bestEdit = edit;\n      var bestEquality2 = equality2;\n      var bestScore = diff_cleanupSemanticScore_(equality1, edit) +\n          diff_cleanupSemanticScore_(edit, equality2);\n      while (edit.charAt(0) === equality2.charAt(0)) {\n        equality1 += edit.charAt(0);\n        edit = edit.substring(1) + equality2.charAt(0);\n        equality2 = equality2.substring(1);\n        var score = diff_cleanupSemanticScore_(equality1, edit) +\n            diff_cleanupSemanticScore_(edit, equality2);\n        // The >= encourages trailing rather than leading whitespace on edits.\n        if (score >= bestScore) {\n          bestScore = score;\n          bestEquality1 = equality1;\n          bestEdit = edit;\n          bestEquality2 = equality2;\n        }\n      }\n\n      if (diffs[pointer - 1][1] != bestEquality1) {\n        // We have an improvement, save it back to the diff.\n        if (bestEquality1) {\n          diffs[pointer - 1][1] = bestEquality1;\n        } else {\n          diffs.splice(pointer - 1, 1);\n          pointer--;\n        }\n        diffs[pointer][1] = bestEdit;\n        if (bestEquality2) {\n          diffs[pointer + 1][1] = bestEquality2;\n        } else {\n          diffs.splice(pointer + 1, 1);\n          pointer--;\n        }\n      }\n    }\n    pointer++;\n  }\n};\n\n// Define some regex patterns for matching boundaries.\ndiff_match_patch.nonAlphaNumericRegex_ = /[^a-zA-Z0-9]/;\ndiff_match_patch.whitespaceRegex_ = /\\s/;\ndiff_match_patch.linebreakRegex_ = /[\\r\\n]/;\ndiff_match_patch.blanklineEndRegex_ = /\\n\\r?\\n$/;\ndiff_match_patch.blanklineStartRegex_ = /^\\r?\\n\\r?\\n/;\n\n/**\n * Reduce the number of edits by eliminating operationally trivial equalities.\n * @param {!Array.<!diff_match_patch.Diff>} diffs Array of diff tuples.\n */\ndiff_match_patch.prototype.diff_cleanupEfficiency = function(diffs) {\n  var changes = false;\n  var equalities = [];  // Stack of indices where equalities are found.\n  var equalitiesLength = 0;  // Keeping our own length var is faster in JS.\n  /** @type {?string} */\n  var lastEquality = null;\n  // Always equal to diffs[equalities[equalitiesLength - 1]][1]\n  var pointer = 0;  // Index of current position.\n  // Is there an insertion operation before the last equality.\n  var pre_ins = false;\n  // Is there a deletion operation before the last equality.\n  var pre_del = false;\n  // Is there an insertion operation after the last equality.\n  var post_ins = false;\n  // Is there a deletion operation after the last equality.\n  var post_del = false;\n  while (pointer < diffs.length) {\n    if (diffs[pointer][0] == DIFF_EQUAL) {  // Equality found.\n      if (diffs[pointer][1].length < this.Diff_EditCost &&\n          (post_ins || post_del)) {\n        // Candidate found.\n        equalities[equalitiesLength++] = pointer;\n        pre_ins = post_ins;\n        pre_del = post_del;\n        lastEquality = diffs[pointer][1];\n      } else {\n        // Not a candidate, and can never become one.\n        equalitiesLength = 0;\n        lastEquality = null;\n      }\n      post_ins = post_del = false;\n    } else {  // An insertion or deletion.\n      if (diffs[pointer][0] == DIFF_DELETE) {\n        post_del = true;\n      } else {\n        post_ins = true;\n      }\n      /*\n       * Five types to be split:\n       * <ins>A</ins><del>B</del>XY<ins>C</ins><del>D</del>\n       * <ins>A</ins>X<ins>C</ins><del>D</del>\n       * <ins>A</ins><del>B</del>X<ins>C</ins>\n       * <ins>A</del>X<ins>C</ins><del>D</del>\n       * <ins>A</ins><del>B</del>X<del>C</del>\n       */\n      if (lastEquality && ((pre_ins && pre_del && post_ins && post_del) ||\n                           ((lastEquality.length < this.Diff_EditCost / 2) &&\n                            (pre_ins + pre_del + post_ins + post_del) == 3))) {\n        // Duplicate record.\n        diffs.splice(equalities[equalitiesLength - 1], 0,\n                     new diff_match_patch.Diff(DIFF_DELETE, lastEquality));\n        // Change second copy to insert.\n        diffs[equalities[equalitiesLength - 1] + 1][0] = DIFF_INSERT;\n        equalitiesLength--;  // Throw away the equality we just deleted;\n        lastEquality = null;\n        if (pre_ins && pre_del) {\n          // No changes made which could affect previous entry, keep going.\n          post_ins = post_del = true;\n          equalitiesLength = 0;\n        } else {\n          equalitiesLength--;  // Throw away the previous equality.\n          pointer = equalitiesLength > 0 ?\n              equalities[equalitiesLength - 1] : -1;\n          post_ins = post_del = false;\n        }\n        changes = true;\n      }\n    }\n    pointer++;\n  }\n\n  if (changes) {\n    this.diff_cleanupMerge(diffs);\n  }\n};\n\n\n/**\n * Reorder and merge like edit sections.  Merge equalities.\n * Any edit section can move as long as it doesn't cross an equality.\n * @param {!Array.<!diff_match_patch.Diff>} diffs Array of diff tuples.\n */\ndiff_match_patch.prototype.diff_cleanupMerge = function(diffs) {\n  // Add a dummy entry at the end.\n  diffs.push(new diff_match_patch.Diff(DIFF_EQUAL, ''));\n  var pointer = 0;\n  var count_delete = 0;\n  var count_insert = 0;\n  var text_delete = '';\n  var text_insert = '';\n  var commonlength;\n  while (pointer < diffs.length) {\n    switch (diffs[pointer][0]) {\n      case DIFF_INSERT:\n        count_insert++;\n        text_insert += diffs[pointer][1];\n        pointer++;\n        break;\n      case DIFF_DELETE:\n        count_delete++;\n        text_delete += diffs[pointer][1];\n        pointer++;\n        break;\n      case DIFF_EQUAL:\n        // Upon reaching an equality, check for prior redundancies.\n        if (count_delete + count_insert > 1) {\n          if (count_delete !== 0 && count_insert !== 0) {\n            // Factor out any common prefixies.\n            commonlength = this.diff_commonPrefix(text_insert, text_delete);\n            if (commonlength !== 0) {\n              if ((pointer - count_delete - count_insert) > 0 &&\n                  diffs[pointer - count_delete - count_insert - 1][0] ==\n                  DIFF_EQUAL) {\n                diffs[pointer - count_delete - count_insert - 1][1] +=\n                    text_insert.substring(0, commonlength);\n              } else {\n                diffs.splice(0, 0, new diff_match_patch.Diff(DIFF_EQUAL,\n                    text_insert.substring(0, commonlength)));\n                pointer++;\n              }\n              text_insert = text_insert.substring(commonlength);\n              text_delete = text_delete.substring(commonlength);\n            }\n            // Factor out any common suffixies.\n            commonlength = this.diff_commonSuffix(text_insert, text_delete);\n            if (commonlength !== 0) {\n              diffs[pointer][1] = text_insert.substring(text_insert.length -\n                  commonlength) + diffs[pointer][1];\n              text_insert = text_insert.substring(0, text_insert.length -\n                  commonlength);\n              text_delete = text_delete.substring(0, text_delete.length -\n                  commonlength);\n            }\n          }\n          // Delete the offending records and add the merged ones.\n          pointer -= count_delete + count_insert;\n          diffs.splice(pointer, count_delete + count_insert);\n          if (text_delete.length) {\n            diffs.splice(pointer, 0,\n                new diff_match_patch.Diff(DIFF_DELETE, text_delete));\n            pointer++;\n          }\n          if (text_insert.length) {\n            diffs.splice(pointer, 0,\n                new diff_match_patch.Diff(DIFF_INSERT, text_insert));\n            pointer++;\n          }\n          pointer++;\n        } else if (pointer !== 0 && diffs[pointer - 1][0] == DIFF_EQUAL) {\n          // Merge this equality with the previous one.\n          diffs[pointer - 1][1] += diffs[pointer][1];\n          diffs.splice(pointer, 1);\n        } else {\n          pointer++;\n        }\n        count_insert = 0;\n        count_delete = 0;\n        text_delete = '';\n        text_insert = '';\n        break;\n    }\n  }\n  if (diffs[diffs.length - 1][1] === '') {\n    diffs.pop();  // Remove the dummy entry at the end.\n  }\n\n  // Second pass: look for single edits surrounded on both sides by equalities\n  // which can be shifted sideways to eliminate an equality.\n  // e.g: A<ins>BA</ins>C -> <ins>AB</ins>AC\n  var changes = false;\n  pointer = 1;\n  // Intentionally ignore the first and last element (don't need checking).\n  while (pointer < diffs.length - 1) {\n    if (diffs[pointer - 1][0] == DIFF_EQUAL &&\n        diffs[pointer + 1][0] == DIFF_EQUAL) {\n      // This is a single edit surrounded by equalities.\n      if (diffs[pointer][1].substring(diffs[pointer][1].length -\n          diffs[pointer - 1][1].length) == diffs[pointer - 1][1]) {\n        // Shift the edit over the previous equality.\n        diffs[pointer][1] = diffs[pointer - 1][1] +\n            diffs[pointer][1].substring(0, diffs[pointer][1].length -\n                                        diffs[pointer - 1][1].length);\n        diffs[pointer + 1][1] = diffs[pointer - 1][1] + diffs[pointer + 1][1];\n        diffs.splice(pointer - 1, 1);\n        changes = true;\n      } else if (diffs[pointer][1].substring(0, diffs[pointer + 1][1].length) ==\n          diffs[pointer + 1][1]) {\n        // Shift the edit over the next equality.\n        diffs[pointer - 1][1] += diffs[pointer + 1][1];\n        diffs[pointer][1] =\n            diffs[pointer][1].substring(diffs[pointer + 1][1].length) +\n            diffs[pointer + 1][1];\n        diffs.splice(pointer + 1, 1);\n        changes = true;\n      }\n    }\n    pointer++;\n  }\n  // If shifts were made, the diff needs reordering and another shift sweep.\n  if (changes) {\n    this.diff_cleanupMerge(diffs);\n  }\n};\n\n\n/**\n * loc is a location in text1, compute and return the equivalent location in\n * text2.\n * e.g. 'The cat' vs 'The big cat', 1->1, 5->8\n * @param {!Array.<!diff_match_patch.Diff>} diffs Array of diff tuples.\n * @param {number} loc Location within text1.\n * @return {number} Location within text2.\n */\ndiff_match_patch.prototype.diff_xIndex = function(diffs, loc) {\n  var chars1 = 0;\n  var chars2 = 0;\n  var last_chars1 = 0;\n  var last_chars2 = 0;\n  var x;\n  for (x = 0; x < diffs.length; x++) {\n    if (diffs[x][0] !== DIFF_INSERT) {  // Equality or deletion.\n      chars1 += diffs[x][1].length;\n    }\n    if (diffs[x][0] !== DIFF_DELETE) {  // Equality or insertion.\n      chars2 += diffs[x][1].length;\n    }\n    if (chars1 > loc) {  // Overshot the location.\n      break;\n    }\n    last_chars1 = chars1;\n    last_chars2 = chars2;\n  }\n  // Was the location was deleted?\n  if (diffs.length != x && diffs[x][0] === DIFF_DELETE) {\n    return last_chars2;\n  }\n  // Add the remaining character length.\n  return last_chars2 + (loc - last_chars1);\n};\n\n\n/**\n * Convert a diff array into a pretty HTML report.\n * @param {!Array.<!diff_match_patch.Diff>} diffs Array of diff tuples.\n * @return {string} HTML representation.\n */\ndiff_match_patch.prototype.diff_prettyHtml = function(diffs) {\n  var html = [];\n  var pattern_amp = /&/g;\n  var pattern_lt = /</g;\n  var pattern_gt = />/g;\n  var pattern_para = /\\n/g;\n  for (var x = 0; x < diffs.length; x++) {\n    var op = diffs[x][0];    // Operation (insert, delete, equal)\n    var data = diffs[x][1];  // Text of change.\n    var text = data.replace(pattern_amp, '&amp;').replace(pattern_lt, '&lt;')\n        .replace(pattern_gt, '&gt;').replace(pattern_para, '&para;<br>');\n    switch (op) {\n      case DIFF_INSERT:\n        html[x] = '<ins style=\"background:#e6ffe6;\">' + text + '</ins>';\n        break;\n      case DIFF_DELETE:\n        html[x] = '<del style=\"background:#ffe6e6;\">' + text + '</del>';\n        break;\n      case DIFF_EQUAL:\n        html[x] = '<span>' + text + '</span>';\n        break;\n    }\n  }\n  return html.join('');\n};\n\n\n/**\n * Compute and return the source text (all equalities and deletions).\n * @param {!Array.<!diff_match_patch.Diff>} diffs Array of diff tuples.\n * @return {string} Source text.\n */\ndiff_match_patch.prototype.diff_text1 = function(diffs) {\n  var text = [];\n  for (var x = 0; x < diffs.length; x++) {\n    if (diffs[x][0] !== DIFF_INSERT) {\n      text[x] = diffs[x][1];\n    }\n  }\n  return text.join('');\n};\n\n\n/**\n * Compute and return the destination text (all equalities and insertions).\n * @param {!Array.<!diff_match_patch.Diff>} diffs Array of diff tuples.\n * @return {string} Destination text.\n */\ndiff_match_patch.prototype.diff_text2 = function(diffs) {\n  var text = [];\n  for (var x = 0; x < diffs.length; x++) {\n    if (diffs[x][0] !== DIFF_DELETE) {\n      text[x] = diffs[x][1];\n    }\n  }\n  return text.join('');\n};\n\n\n/**\n * Compute the Levenshtein distance; the number of inserted, deleted or\n * substituted characters.\n * @param {!Array.<!diff_match_patch.Diff>} diffs Array of diff tuples.\n * @return {number} Number of changes.\n */\ndiff_match_patch.prototype.diff_levenshtein = function(diffs) {\n  var levenshtein = 0;\n  var insertions = 0;\n  var deletions = 0;\n  for (var x = 0; x < diffs.length; x++) {\n    var op = diffs[x][0];\n    var data = diffs[x][1];\n    switch (op) {\n      case DIFF_INSERT:\n        insertions += data.length;\n        break;\n      case DIFF_DELETE:\n        deletions += data.length;\n        break;\n      case DIFF_EQUAL:\n        // A deletion and an insertion is one substitution.\n        levenshtein += Math.max(insertions, deletions);\n        insertions = 0;\n        deletions = 0;\n        break;\n    }\n  }\n  levenshtein += Math.max(insertions, deletions);\n  return levenshtein;\n};\n\n\n/**\n * Crush the diff into an encoded string which describes the operations\n * required to transform text1 into text2.\n * E.g. =3\\t-2\\t+ing  -> Keep 3 chars, delete 2 chars, insert 'ing'.\n * Operations are tab-separated.  Inserted text is escaped using %xx notation.\n * @param {!Array.<!diff_match_patch.Diff>} diffs Array of diff tuples.\n * @return {string} Delta text.\n */\ndiff_match_patch.prototype.diff_toDelta = function(diffs) {\n  var text = [];\n  for (var x = 0; x < diffs.length; x++) {\n    switch (diffs[x][0]) {\n      case DIFF_INSERT:\n        text[x] = '+' + encodeURI(diffs[x][1]);\n        break;\n      case DIFF_DELETE:\n        text[x] = '-' + diffs[x][1].length;\n        break;\n      case DIFF_EQUAL:\n        text[x] = '=' + diffs[x][1].length;\n        break;\n    }\n  }\n  return text.join('\\t').replace(/%20/g, ' ');\n};\n\n\n/**\n * Given the original text1, and an encoded string which describes the\n * operations required to transform text1 into text2, compute the full diff.\n * @param {string} text1 Source string for the diff.\n * @param {string} delta Delta text.\n * @return {!Array.<!diff_match_patch.Diff>} Array of diff tuples.\n * @throws {!Error} If invalid input.\n */\ndiff_match_patch.prototype.diff_fromDelta = function(text1, delta) {\n  var diffs = [];\n  var diffsLength = 0;  // Keeping our own length var is faster in JS.\n  var pointer = 0;  // Cursor in text1\n  var tokens = delta.split(/\\t/g);\n  for (var x = 0; x < tokens.length; x++) {\n    // Each token begins with a one character parameter which specifies the\n    // operation of this token (delete, insert, equality).\n    var param = tokens[x].substring(1);\n    switch (tokens[x].charAt(0)) {\n      case '+':\n        try {\n          diffs[diffsLength++] =\n              new diff_match_patch.Diff(DIFF_INSERT, decodeURI(param));\n        } catch (ex) {\n          // Malformed URI sequence.\n          throw new Error('Illegal escape in diff_fromDelta: ' + param);\n        }\n        break;\n      case '-':\n        // Fall through.\n      case '=':\n        var n = parseInt(param, 10);\n        if (isNaN(n) || n < 0) {\n          throw new Error('Invalid number in diff_fromDelta: ' + param);\n        }\n        var text = text1.substring(pointer, pointer += n);\n        if (tokens[x].charAt(0) == '=') {\n          diffs[diffsLength++] = new diff_match_patch.Diff(DIFF_EQUAL, text);\n        } else {\n          diffs[diffsLength++] = new diff_match_patch.Diff(DIFF_DELETE, text);\n        }\n        break;\n      default:\n        // Blank tokens are ok (from a trailing \\t).\n        // Anything else is an error.\n        if (tokens[x]) {\n          throw new Error('Invalid diff operation in diff_fromDelta: ' +\n                          tokens[x]);\n        }\n    }\n  }\n  if (pointer != text1.length) {\n    throw new Error('Delta length (' + pointer +\n        ') does not equal source text length (' + text1.length + ').');\n  }\n  return diffs;\n};\n\n\n//  MATCH FUNCTIONS\n\n\n/**\n * Locate the best instance of 'pattern' in 'text' near 'loc'.\n * @param {string} text The text to search.\n * @param {string} pattern The pattern to search for.\n * @param {number} loc The location to search around.\n * @return {number} Best match index or -1.\n */\ndiff_match_patch.prototype.match_main = function(text, pattern, loc) {\n  // Check for null inputs.\n  if (text == null || pattern == null || loc == null) {\n    throw new Error('Null input. (match_main)');\n  }\n\n  loc = Math.max(0, Math.min(loc, text.length));\n  if (text == pattern) {\n    // Shortcut (potentially not guaranteed by the algorithm)\n    return 0;\n  } else if (!text.length) {\n    // Nothing to match.\n    return -1;\n  } else if (text.substring(loc, loc + pattern.length) == pattern) {\n    // Perfect match at the perfect spot!  (Includes case of null pattern)\n    return loc;\n  } else {\n    // Do a fuzzy compare.\n    return this.match_bitap_(text, pattern, loc);\n  }\n};\n\n\n/**\n * Locate the best instance of 'pattern' in 'text' near 'loc' using the\n * Bitap algorithm.\n * @param {string} text The text to search.\n * @param {string} pattern The pattern to search for.\n * @param {number} loc The location to search around.\n * @return {number} Best match index or -1.\n * @private\n */\ndiff_match_patch.prototype.match_bitap_ = function(text, pattern, loc) {\n  if (pattern.length > this.Match_MaxBits) {\n    throw new Error('Pattern too long for this browser.');\n  }\n\n  // Initialise the alphabet.\n  var s = this.match_alphabet_(pattern);\n\n  var dmp = this;  // 'this' becomes 'window' in a closure.\n\n  /**\n   * Compute and return the score for a match with e errors and x location.\n   * Accesses loc and pattern through being a closure.\n   * @param {number} e Number of errors in match.\n   * @param {number} x Location of match.\n   * @return {number} Overall score for match (0.0 = good, 1.0 = bad).\n   * @private\n   */\n  function match_bitapScore_(e, x) {\n    var accuracy = e / pattern.length;\n    var proximity = Math.abs(loc - x);\n    if (!dmp.Match_Distance) {\n      // Dodge divide by zero error.\n      return proximity ? 1.0 : accuracy;\n    }\n    return accuracy + (proximity / dmp.Match_Distance);\n  }\n\n  // Highest score beyond which we give up.\n  var score_threshold = this.Match_Threshold;\n  // Is there a nearby exact match? (speedup)\n  var best_loc = text.indexOf(pattern, loc);\n  if (best_loc != -1) {\n    score_threshold = Math.min(match_bitapScore_(0, best_loc), score_threshold);\n    // What about in the other direction? (speedup)\n    best_loc = text.lastIndexOf(pattern, loc + pattern.length);\n    if (best_loc != -1) {\n      score_threshold =\n          Math.min(match_bitapScore_(0, best_loc), score_threshold);\n    }\n  }\n\n  // Initialise the bit arrays.\n  var matchmask = 1 << (pattern.length - 1);\n  best_loc = -1;\n\n  var bin_min, bin_mid;\n  var bin_max = pattern.length + text.length;\n  var last_rd;\n  for (var d = 0; d < pattern.length; d++) {\n    // Scan for the best match; each iteration allows for one more error.\n    // Run a binary search to determine how far from 'loc' we can stray at this\n    // error level.\n    bin_min = 0;\n    bin_mid = bin_max;\n    while (bin_min < bin_mid) {\n      if (match_bitapScore_(d, loc + bin_mid) <= score_threshold) {\n        bin_min = bin_mid;\n      } else {\n        bin_max = bin_mid;\n      }\n      bin_mid = Math.floor((bin_max - bin_min) / 2 + bin_min);\n    }\n    // Use the result from this iteration as the maximum for the next.\n    bin_max = bin_mid;\n    var start = Math.max(1, loc - bin_mid + 1);\n    var finish = Math.min(loc + bin_mid, text.length) + pattern.length;\n\n    var rd = Array(finish + 2);\n    rd[finish + 1] = (1 << d) - 1;\n    for (var j = finish; j >= start; j--) {\n      // The alphabet (s) is a sparse hash, so the following line generates\n      // warnings.\n      var charMatch = s[text.charAt(j - 1)];\n      if (d === 0) {  // First pass: exact match.\n        rd[j] = ((rd[j + 1] << 1) | 1) & charMatch;\n      } else {  // Subsequent passes: fuzzy match.\n        rd[j] = (((rd[j + 1] << 1) | 1) & charMatch) |\n                (((last_rd[j + 1] | last_rd[j]) << 1) | 1) |\n                last_rd[j + 1];\n      }\n      if (rd[j] & matchmask) {\n        var score = match_bitapScore_(d, j - 1);\n        // This match will almost certainly be better than any existing match.\n        // But check anyway.\n        if (score <= score_threshold) {\n          // Told you so.\n          score_threshold = score;\n          best_loc = j - 1;\n          if (best_loc > loc) {\n            // When passing loc, don't exceed our current distance from loc.\n            start = Math.max(1, 2 * loc - best_loc);\n          } else {\n            // Already passed loc, downhill from here on in.\n            break;\n          }\n        }\n      }\n    }\n    // No hope for a (better) match at greater error levels.\n    if (match_bitapScore_(d + 1, loc) > score_threshold) {\n      break;\n    }\n    last_rd = rd;\n  }\n  return best_loc;\n};\n\n\n/**\n * Initialise the alphabet for the Bitap algorithm.\n * @param {string} pattern The text to encode.\n * @return {!Object} Hash of character locations.\n * @private\n */\ndiff_match_patch.prototype.match_alphabet_ = function(pattern) {\n  var s = {};\n  for (var i = 0; i < pattern.length; i++) {\n    s[pattern.charAt(i)] = 0;\n  }\n  for (var i = 0; i < pattern.length; i++) {\n    s[pattern.charAt(i)] |= 1 << (pattern.length - i - 1);\n  }\n  return s;\n};\n\n\n//  PATCH FUNCTIONS\n\n\n/**\n * Increase the context until it is unique,\n * but don't let the pattern expand beyond Match_MaxBits.\n * @param {!diff_match_patch.patch_obj} patch The patch to grow.\n * @param {string} text Source text.\n * @private\n */\ndiff_match_patch.prototype.patch_addContext_ = function(patch, text) {\n  if (text.length == 0) {\n    return;\n  }\n  if (patch.start2 === null) {\n    throw Error('patch not initialized');\n  }\n  var pattern = text.substring(patch.start2, patch.start2 + patch.length1);\n  var padding = 0;\n\n  // Look for the first and last matches of pattern in text.  If two different\n  // matches are found, increase the pattern length.\n  while (text.indexOf(pattern) != text.lastIndexOf(pattern) &&\n         pattern.length < this.Match_MaxBits - this.Patch_Margin -\n         this.Patch_Margin) {\n    padding += this.Patch_Margin;\n    pattern = text.substring(patch.start2 - padding,\n                             patch.start2 + patch.length1 + padding);\n  }\n  // Add one chunk for good luck.\n  padding += this.Patch_Margin;\n\n  // Add the prefix.\n  var prefix = text.substring(patch.start2 - padding, patch.start2);\n  if (prefix) {\n    patch.diffs.unshift(new diff_match_patch.Diff(DIFF_EQUAL, prefix));\n  }\n  // Add the suffix.\n  var suffix = text.substring(patch.start2 + patch.length1,\n                              patch.start2 + patch.length1 + padding);\n  if (suffix) {\n    patch.diffs.push(new diff_match_patch.Diff(DIFF_EQUAL, suffix));\n  }\n\n  // Roll back the start points.\n  patch.start1 -= prefix.length;\n  patch.start2 -= prefix.length;\n  // Extend the lengths.\n  patch.length1 += prefix.length + suffix.length;\n  patch.length2 += prefix.length + suffix.length;\n};\n\n\n/**\n * Compute a list of patches to turn text1 into text2.\n * Use diffs if provided, otherwise compute it ourselves.\n * There are four ways to call this function, depending on what data is\n * available to the caller:\n * Method 1:\n * a = text1, b = text2\n * Method 2:\n * a = diffs\n * Method 3 (optimal):\n * a = text1, b = diffs\n * Method 4 (deprecated, use method 3):\n * a = text1, b = text2, c = diffs\n *\n * @param {string|!Array.<!diff_match_patch.Diff>} a text1 (methods 1,3,4) or\n * Array of diff tuples for text1 to text2 (method 2).\n * @param {string|!Array.<!diff_match_patch.Diff>=} opt_b text2 (methods 1,4) or\n * Array of diff tuples for text1 to text2 (method 3) or undefined (method 2).\n * @param {string|!Array.<!diff_match_patch.Diff>=} opt_c Array of diff tuples\n * for text1 to text2 (method 4) or undefined (methods 1,2,3).\n * @return {!Array.<!diff_match_patch.patch_obj>} Array of Patch objects.\n */\ndiff_match_patch.prototype.patch_make = function(a, opt_b, opt_c) {\n  var text1, diffs;\n  if (typeof a == 'string' && typeof opt_b == 'string' &&\n      typeof opt_c == 'undefined') {\n    // Method 1: text1, text2\n    // Compute diffs from text1 and text2.\n    text1 = /** @type {string} */(a);\n    diffs = this.diff_main(text1, /** @type {string} */(opt_b), true);\n    if (diffs.length > 2) {\n      this.diff_cleanupSemantic(diffs);\n      this.diff_cleanupEfficiency(diffs);\n    }\n  } else if (a && typeof a == 'object' && typeof opt_b == 'undefined' &&\n      typeof opt_c == 'undefined') {\n    // Method 2: diffs\n    // Compute text1 from diffs.\n    diffs = /** @type {!Array.<!diff_match_patch.Diff>} */(a);\n    text1 = this.diff_text1(diffs);\n  } else if (typeof a == 'string' && opt_b && typeof opt_b == 'object' &&\n      typeof opt_c == 'undefined') {\n    // Method 3: text1, diffs\n    text1 = /** @type {string} */(a);\n    diffs = /** @type {!Array.<!diff_match_patch.Diff>} */(opt_b);\n  } else if (typeof a == 'string' && typeof opt_b == 'string' &&\n      opt_c && typeof opt_c == 'object') {\n    // Method 4: text1, text2, diffs\n    // text2 is not used.\n    text1 = /** @type {string} */(a);\n    diffs = /** @type {!Array.<!diff_match_patch.Diff>} */(opt_c);\n  } else {\n    throw new Error('Unknown call format to patch_make.');\n  }\n\n  if (diffs.length === 0) {\n    return [];  // Get rid of the null case.\n  }\n  var patches = [];\n  var patch = new diff_match_patch.patch_obj();\n  var patchDiffLength = 0;  // Keeping our own length var is faster in JS.\n  var char_count1 = 0;  // Number of characters into the text1 string.\n  var char_count2 = 0;  // Number of characters into the text2 string.\n  // Start with text1 (prepatch_text) and apply the diffs until we arrive at\n  // text2 (postpatch_text).  We recreate the patches one by one to determine\n  // context info.\n  var prepatch_text = text1;\n  var postpatch_text = text1;\n  for (var x = 0; x < diffs.length; x++) {\n    var diff_type = diffs[x][0];\n    var diff_text = diffs[x][1];\n\n    if (!patchDiffLength && diff_type !== DIFF_EQUAL) {\n      // A new patch starts here.\n      patch.start1 = char_count1;\n      patch.start2 = char_count2;\n    }\n\n    switch (diff_type) {\n      case DIFF_INSERT:\n        patch.diffs[patchDiffLength++] = diffs[x];\n        patch.length2 += diff_text.length;\n        postpatch_text = postpatch_text.substring(0, char_count2) + diff_text +\n                         postpatch_text.substring(char_count2);\n        break;\n      case DIFF_DELETE:\n        patch.length1 += diff_text.length;\n        patch.diffs[patchDiffLength++] = diffs[x];\n        postpatch_text = postpatch_text.substring(0, char_count2) +\n                         postpatch_text.substring(char_count2 +\n                             diff_text.length);\n        break;\n      case DIFF_EQUAL:\n        if (diff_text.length <= 2 * this.Patch_Margin &&\n            patchDiffLength && diffs.length != x + 1) {\n          // Small equality inside a patch.\n          patch.diffs[patchDiffLength++] = diffs[x];\n          patch.length1 += diff_text.length;\n          patch.length2 += diff_text.length;\n        } else if (diff_text.length >= 2 * this.Patch_Margin) {\n          // Time for a new patch.\n          if (patchDiffLength) {\n            this.patch_addContext_(patch, prepatch_text);\n            patches.push(patch);\n            patch = new diff_match_patch.patch_obj();\n            patchDiffLength = 0;\n            // Unlike Unidiff, our patch lists have a rolling context.\n            // https://github.com/google/diff-match-patch/wiki/Unidiff\n            // Update prepatch text & pos to reflect the application of the\n            // just completed patch.\n            prepatch_text = postpatch_text;\n            char_count1 = char_count2;\n          }\n        }\n        break;\n    }\n\n    // Update the current character count.\n    if (diff_type !== DIFF_INSERT) {\n      char_count1 += diff_text.length;\n    }\n    if (diff_type !== DIFF_DELETE) {\n      char_count2 += diff_text.length;\n    }\n  }\n  // Pick up the leftover patch if not empty.\n  if (patchDiffLength) {\n    this.patch_addContext_(patch, prepatch_text);\n    patches.push(patch);\n  }\n\n  return patches;\n};\n\n\n/**\n * Given an array of patches, return another array that is identical.\n * @param {!Array.<!diff_match_patch.patch_obj>} patches Array of Patch objects.\n * @return {!Array.<!diff_match_patch.patch_obj>} Array of Patch objects.\n */\ndiff_match_patch.prototype.patch_deepCopy = function(patches) {\n  // Making deep copies is hard in JavaScript.\n  var patchesCopy = [];\n  for (var x = 0; x < patches.length; x++) {\n    var patch = patches[x];\n    var patchCopy = new diff_match_patch.patch_obj();\n    patchCopy.diffs = [];\n    for (var y = 0; y < patch.diffs.length; y++) {\n      patchCopy.diffs[y] =\n          new diff_match_patch.Diff(patch.diffs[y][0], patch.diffs[y][1]);\n    }\n    patchCopy.start1 = patch.start1;\n    patchCopy.start2 = patch.start2;\n    patchCopy.length1 = patch.length1;\n    patchCopy.length2 = patch.length2;\n    patchesCopy[x] = patchCopy;\n  }\n  return patchesCopy;\n};\n\n\n/**\n * Merge a set of patches onto the text.  Return a patched text, as well\n * as a list of true/false values indicating which patches were applied.\n * @param {!Array.<!diff_match_patch.patch_obj>} patches Array of Patch objects.\n * @param {string} text Old text.\n * @return {!Array.<string|!Array.<boolean>>} Two element Array, containing the\n *      new text and an array of boolean values.\n */\ndiff_match_patch.prototype.patch_apply = function(patches, text) {\n  if (patches.length == 0) {\n    return [text, []];\n  }\n\n  // Deep copy the patches so that no changes are made to originals.\n  patches = this.patch_deepCopy(patches);\n\n  var nullPadding = this.patch_addPadding(patches);\n  text = nullPadding + text + nullPadding;\n\n  this.patch_splitMax(patches);\n  // delta keeps track of the offset between the expected and actual location\n  // of the previous patch.  If there are patches expected at positions 10 and\n  // 20, but the first patch was found at 12, delta is 2 and the second patch\n  // has an effective expected position of 22.\n  var delta = 0;\n  var results = [];\n  for (var x = 0; x < patches.length; x++) {\n    var expected_loc = patches[x].start2 + delta;\n    var text1 = this.diff_text1(patches[x].diffs);\n    var start_loc;\n    var end_loc = -1;\n    if (text1.length > this.Match_MaxBits) {\n      // patch_splitMax will only provide an oversized pattern in the case of\n      // a monster delete.\n      start_loc = this.match_main(text, text1.substring(0, this.Match_MaxBits),\n                                  expected_loc);\n      if (start_loc != -1) {\n        end_loc = this.match_main(text,\n            text1.substring(text1.length - this.Match_MaxBits),\n            expected_loc + text1.length - this.Match_MaxBits);\n        if (end_loc == -1 || start_loc >= end_loc) {\n          // Can't find valid trailing context.  Drop this patch.\n          start_loc = -1;\n        }\n      }\n    } else {\n      start_loc = this.match_main(text, text1, expected_loc);\n    }\n    if (start_loc == -1) {\n      // No match found.  :(\n      results[x] = false;\n      // Subtract the delta for this failed patch from subsequent patches.\n      delta -= patches[x].length2 - patches[x].length1;\n    } else {\n      // Found a match.  :)\n      results[x] = true;\n      delta = start_loc - expected_loc;\n      var text2;\n      if (end_loc == -1) {\n        text2 = text.substring(start_loc, start_loc + text1.length);\n      } else {\n        text2 = text.substring(start_loc, end_loc + this.Match_MaxBits);\n      }\n      if (text1 == text2) {\n        // Perfect match, just shove the replacement text in.\n        text = text.substring(0, start_loc) +\n               this.diff_text2(patches[x].diffs) +\n               text.substring(start_loc + text1.length);\n      } else {\n        // Imperfect match.  Run a diff to get a framework of equivalent\n        // indices.\n        var diffs = this.diff_main(text1, text2, false);\n        if (text1.length > this.Match_MaxBits &&\n            this.diff_levenshtein(diffs) / text1.length >\n            this.Patch_DeleteThreshold) {\n          // The end points match, but the content is unacceptably bad.\n          results[x] = false;\n        } else {\n          this.diff_cleanupSemanticLossless(diffs);\n          var index1 = 0;\n          var index2;\n          for (var y = 0; y < patches[x].diffs.length; y++) {\n            var mod = patches[x].diffs[y];\n            if (mod[0] !== DIFF_EQUAL) {\n              index2 = this.diff_xIndex(diffs, index1);\n            }\n            if (mod[0] === DIFF_INSERT) {  // Insertion\n              text = text.substring(0, start_loc + index2) + mod[1] +\n                     text.substring(start_loc + index2);\n            } else if (mod[0] === DIFF_DELETE) {  // Deletion\n              text = text.substring(0, start_loc + index2) +\n                     text.substring(start_loc + this.diff_xIndex(diffs,\n                         index1 + mod[1].length));\n            }\n            if (mod[0] !== DIFF_DELETE) {\n              index1 += mod[1].length;\n            }\n          }\n        }\n      }\n    }\n  }\n  // Strip the padding off.\n  text = text.substring(nullPadding.length, text.length - nullPadding.length);\n  return [text, results];\n};\n\n\n/**\n * Add some padding on text start and end so that edges can match something.\n * Intended to be called only from within patch_apply.\n * @param {!Array.<!diff_match_patch.patch_obj>} patches Array of Patch objects.\n * @return {string} The padding string added to each side.\n */\ndiff_match_patch.prototype.patch_addPadding = function(patches) {\n  var paddingLength = this.Patch_Margin;\n  var nullPadding = '';\n  for (var x = 1; x <= paddingLength; x++) {\n    nullPadding += String.fromCharCode(x);\n  }\n\n  // Bump all the patches forward.\n  for (var x = 0; x < patches.length; x++) {\n    patches[x].start1 += paddingLength;\n    patches[x].start2 += paddingLength;\n  }\n\n  // Add some padding on start of first diff.\n  var patch = patches[0];\n  var diffs = patch.diffs;\n  if (diffs.length == 0 || diffs[0][0] != DIFF_EQUAL) {\n    // Add nullPadding equality.\n    diffs.unshift(new diff_match_patch.Diff(DIFF_EQUAL, nullPadding));\n    patch.start1 -= paddingLength;  // Should be 0.\n    patch.start2 -= paddingLength;  // Should be 0.\n    patch.length1 += paddingLength;\n    patch.length2 += paddingLength;\n  } else if (paddingLength > diffs[0][1].length) {\n    // Grow first equality.\n    var extraLength = paddingLength - diffs[0][1].length;\n    diffs[0][1] = nullPadding.substring(diffs[0][1].length) + diffs[0][1];\n    patch.start1 -= extraLength;\n    patch.start2 -= extraLength;\n    patch.length1 += extraLength;\n    patch.length2 += extraLength;\n  }\n\n  // Add some padding on end of last diff.\n  patch = patches[patches.length - 1];\n  diffs = patch.diffs;\n  if (diffs.length == 0 || diffs[diffs.length - 1][0] != DIFF_EQUAL) {\n    // Add nullPadding equality.\n    diffs.push(new diff_match_patch.Diff(DIFF_EQUAL, nullPadding));\n    patch.length1 += paddingLength;\n    patch.length2 += paddingLength;\n  } else if (paddingLength > diffs[diffs.length - 1][1].length) {\n    // Grow last equality.\n    var extraLength = paddingLength - diffs[diffs.length - 1][1].length;\n    diffs[diffs.length - 1][1] += nullPadding.substring(0, extraLength);\n    patch.length1 += extraLength;\n    patch.length2 += extraLength;\n  }\n\n  return nullPadding;\n};\n\n\n/**\n * Look through the patches and break up any which are longer than the maximum\n * limit of the match algorithm.\n * Intended to be called only from within patch_apply.\n * @param {!Array.<!diff_match_patch.patch_obj>} patches Array of Patch objects.\n */\ndiff_match_patch.prototype.patch_splitMax = function(patches) {\n  var patch_size = this.Match_MaxBits;\n  for (var x = 0; x < patches.length; x++) {\n    if (patches[x].length1 <= patch_size) {\n      continue;\n    }\n    var bigpatch = patches[x];\n    // Remove the big old patch.\n    patches.splice(x--, 1);\n    var start1 = bigpatch.start1;\n    var start2 = bigpatch.start2;\n    var precontext = '';\n    while (bigpatch.diffs.length !== 0) {\n      // Create one of several smaller patches.\n      var patch = new diff_match_patch.patch_obj();\n      var empty = true;\n      patch.start1 = start1 - precontext.length;\n      patch.start2 = start2 - precontext.length;\n      if (precontext !== '') {\n        patch.length1 = patch.length2 = precontext.length;\n        patch.diffs.push(new diff_match_patch.Diff(DIFF_EQUAL, precontext));\n      }\n      while (bigpatch.diffs.length !== 0 &&\n             patch.length1 < patch_size - this.Patch_Margin) {\n        var diff_type = bigpatch.diffs[0][0];\n        var diff_text = bigpatch.diffs[0][1];\n        if (diff_type === DIFF_INSERT) {\n          // Insertions are harmless.\n          patch.length2 += diff_text.length;\n          start2 += diff_text.length;\n          patch.diffs.push(bigpatch.diffs.shift());\n          empty = false;\n        } else if (diff_type === DIFF_DELETE && patch.diffs.length == 1 &&\n                   patch.diffs[0][0] == DIFF_EQUAL &&\n                   diff_text.length > 2 * patch_size) {\n          // This is a large deletion.  Let it pass in one chunk.\n          patch.length1 += diff_text.length;\n          start1 += diff_text.length;\n          empty = false;\n          patch.diffs.push(new diff_match_patch.Diff(diff_type, diff_text));\n          bigpatch.diffs.shift();\n        } else {\n          // Deletion or equality.  Only take as much as we can stomach.\n          diff_text = diff_text.substring(0,\n              patch_size - patch.length1 - this.Patch_Margin);\n          patch.length1 += diff_text.length;\n          start1 += diff_text.length;\n          if (diff_type === DIFF_EQUAL) {\n            patch.length2 += diff_text.length;\n            start2 += diff_text.length;\n          } else {\n            empty = false;\n          }\n          patch.diffs.push(new diff_match_patch.Diff(diff_type, diff_text));\n          if (diff_text == bigpatch.diffs[0][1]) {\n            bigpatch.diffs.shift();\n          } else {\n            bigpatch.diffs[0][1] =\n                bigpatch.diffs[0][1].substring(diff_text.length);\n          }\n        }\n      }\n      // Compute the head context for the next patch.\n      precontext = this.diff_text2(patch.diffs);\n      precontext =\n          precontext.substring(precontext.length - this.Patch_Margin);\n      // Append the end context for this patch.\n      var postcontext = this.diff_text1(bigpatch.diffs)\n                            .substring(0, this.Patch_Margin);\n      if (postcontext !== '') {\n        patch.length1 += postcontext.length;\n        patch.length2 += postcontext.length;\n        if (patch.diffs.length !== 0 &&\n            patch.diffs[patch.diffs.length - 1][0] === DIFF_EQUAL) {\n          patch.diffs[patch.diffs.length - 1][1] += postcontext;\n        } else {\n          patch.diffs.push(new diff_match_patch.Diff(DIFF_EQUAL, postcontext));\n        }\n      }\n      if (!empty) {\n        patches.splice(++x, 0, patch);\n      }\n    }\n  }\n};\n\n\n/**\n * Take a list of patches and return a textual representation.\n * @param {!Array.<!diff_match_patch.patch_obj>} patches Array of Patch objects.\n * @return {string} Text representation of patches.\n */\ndiff_match_patch.prototype.patch_toText = function(patches) {\n  var text = [];\n  for (var x = 0; x < patches.length; x++) {\n    text[x] = patches[x];\n  }\n  return text.join('');\n};\n\n\n/**\n * Parse a textual representation of patches and return a list of Patch objects.\n * @param {string} textline Text representation of patches.\n * @return {!Array.<!diff_match_patch.patch_obj>} Array of Patch objects.\n * @throws {!Error} If invalid input.\n */\ndiff_match_patch.prototype.patch_fromText = function(textline) {\n  var patches = [];\n  if (!textline) {\n    return patches;\n  }\n  var text = textline.split('\\n');\n  var textPointer = 0;\n  var patchHeader = /^@@ -(\\d+),?(\\d*) \\+(\\d+),?(\\d*) @@$/;\n  while (textPointer < text.length) {\n    var m = text[textPointer].match(patchHeader);\n    if (!m) {\n      throw new Error('Invalid patch string: ' + text[textPointer]);\n    }\n    var patch = new diff_match_patch.patch_obj();\n    patches.push(patch);\n    patch.start1 = parseInt(m[1], 10);\n    if (m[2] === '') {\n      patch.start1--;\n      patch.length1 = 1;\n    } else if (m[2] == '0') {\n      patch.length1 = 0;\n    } else {\n      patch.start1--;\n      patch.length1 = parseInt(m[2], 10);\n    }\n\n    patch.start2 = parseInt(m[3], 10);\n    if (m[4] === '') {\n      patch.start2--;\n      patch.length2 = 1;\n    } else if (m[4] == '0') {\n      patch.length2 = 0;\n    } else {\n      patch.start2--;\n      patch.length2 = parseInt(m[4], 10);\n    }\n    textPointer++;\n\n    while (textPointer < text.length) {\n      var sign = text[textPointer].charAt(0);\n      try {\n        var line = decodeURI(text[textPointer].substring(1));\n      } catch (ex) {\n        // Malformed URI sequence.\n        throw new Error('Illegal escape in patch_fromText: ' + line);\n      }\n      if (sign == '-') {\n        // Deletion.\n        patch.diffs.push(new diff_match_patch.Diff(DIFF_DELETE, line));\n      } else if (sign == '+') {\n        // Insertion.\n        patch.diffs.push(new diff_match_patch.Diff(DIFF_INSERT, line));\n      } else if (sign == ' ') {\n        // Minor equality.\n        patch.diffs.push(new diff_match_patch.Diff(DIFF_EQUAL, line));\n      } else if (sign == '@') {\n        // Start of next patch.\n        break;\n      } else if (sign === '') {\n        // Blank line?  Whatever.\n      } else {\n        // WTF?\n        throw new Error('Invalid patch mode \"' + sign + '\" in: ' + line);\n      }\n      textPointer++;\n    }\n  }\n  return patches;\n};\n\n\n/**\n * Class representing one patch operation.\n * @constructor\n */\ndiff_match_patch.patch_obj = function() {\n  /** @type {!Array.<!diff_match_patch.Diff>} */\n  this.diffs = [];\n  /** @type {?number} */\n  this.start1 = null;\n  /** @type {?number} */\n  this.start2 = null;\n  /** @type {number} */\n  this.length1 = 0;\n  /** @type {number} */\n  this.length2 = 0;\n};\n\n\n/**\n * Emulate GNU diff's format.\n * Header: @@ -382,8 +481,9 @@\n * Indices are printed as 1-based, not 0-based.\n * @return {string} The GNU diff string.\n */\ndiff_match_patch.patch_obj.prototype.toString = function() {\n  var coords1, coords2;\n  if (this.length1 === 0) {\n    coords1 = this.start1 + ',0';\n  } else if (this.length1 == 1) {\n    coords1 = this.start1 + 1;\n  } else {\n    coords1 = (this.start1 + 1) + ',' + this.length1;\n  }\n  if (this.length2 === 0) {\n    coords2 = this.start2 + ',0';\n  } else if (this.length2 == 1) {\n    coords2 = this.start2 + 1;\n  } else {\n    coords2 = (this.start2 + 1) + ',' + this.length2;\n  }\n  var text = ['@@ -' + coords1 + ' +' + coords2 + ' @@\\n'];\n  var op;\n  // Escape the body of the patch with %xx notation.\n  for (var x = 0; x < this.diffs.length; x++) {\n    switch (this.diffs[x][0]) {\n      case DIFF_INSERT:\n        op = '+';\n        break;\n      case DIFF_DELETE:\n        op = '-';\n        break;\n      case DIFF_EQUAL:\n        op = ' ';\n        break;\n    }\n    text[x + 1] = op + encodeURI(this.diffs[x][1]) + '\\n';\n  }\n  return text.join('').replace(/%20/g, ' ');\n};\n\n\n// The following export code was added by @ForbesLindesay\nmodule.exports = diff_match_patch;\nmodule.exports['diff_match_patch'] = diff_match_patch;\nmodule.exports['DIFF_DELETE'] = DIFF_DELETE;\nmodule.exports['DIFF_INSERT'] = DIFF_INSERT;\nmodule.exports['DIFF_EQUAL'] = DIFF_EQUAL;","/**\n * Delimiters regex.\n * Override it to change templating delimiters.\n */\nexport let delimitersRegex = new RegExp('{{(.*?)}}', 'gm');\n/**\n * Get processed value from values bag.\n * Can return string / number / boolean ... Value is not casted to string.\n * Will call function if value is a function, and will return function result.\n * @param valueName Property name of the value to get from value bag\n * @param values One level deep value bag containing properties and values as scalar or functions\n */\nfunction processValue(valueName, values) {\n    // Silently fail as empty string if value is not found\n    if (!(valueName in values))\n        return '';\n    // Get raw value\n    const value = values[valueName];\n    // Call function or return value\n    return (typeof value === 'function' ? value.call(values, values) : value);\n}\n/**\n * Called each time the regex find an mustache delimited variable\n * @param match Detected mustache match ( without delimiters )\n * @param values One level deep value bag containing properties and values as scalar or functions\n */\nfunction matcher(match, values) {\n    // Removed spaces\n    const trimmed = match.trim();\n    // Try to detect ternaries\n    const ternaryDelimiter0 = trimmed.indexOf('?');\n    const ternaryDelimiter1 = trimmed.indexOf(':');\n    if (ternaryDelimiter0 > 0) {\n        // Get value name from ternary ( valueName ? truePart : falsePart ) and then get processed value\n        const ternaryValueName = trimmed.substring(0, ternaryDelimiter0).trim();\n        const ternaryCondition = processValue(ternaryValueName, values);\n        // Execute condition and return trimmed truePart or trimmed falsePart\n        return (\n        // Truthy\n        ternaryCondition\n            ? trimmed.substring(ternaryDelimiter0 + 1, ternaryDelimiter1).trim()\n            // Falsy\n            : (\n            // Show second par after semicolon if falsy\n            // Or show empty string if there is no semicolon\n            ternaryDelimiter1 > 0\n                ? trimmed.substring(ternaryDelimiter1 + 1, trimmed.length).trim()\n                : ''));\n    }\n    // No ternary, process value\n    return processValue(trimmed, values);\n}\n/**\n * Process a template as string with values.\n * Values needs to be a one level deep associative object ( key : value ).\n * Why do you need Nanostache since literal template strings are available in ES6+ ?\n * Nanostache can be useful when any templating is needed when the template source is not coming\n * from javascript itself. For example, if you need to process a template from a file, or\n * any other kind of input.\n *\n * Example :\n * Nanostache('Hello {{username}}', {\n *   username: 'James Bond'\n * });\n * -> 'Hello James Bond'\n *\n * Values can be functions :\n * const user = { balance : 12 };\n * Nanostache('Your current balance is {{balance}}€', {\n *   balance: () => user.balance\n * });\n * -> 'Your current balance is 12€'\n *\n * Ternary conditions can be used :\n * Nanostache('Condition is {{test ? truthy : falsy}}', {\n *   test: 0\n * });\n * -> 'Condition is falsy'\n *\n * Or, with the help of functions :\n * Nanostache('{{name}} is {{age}} {{isAgePlural ? years : year}} old', {\n *    name: 'Brad Pitt',\n *    age: 55,\n *    // Note that v here is the current value object\n *    // So we can access dynamically to the age property\n *    isAgePlural: v => v.age > 1\n * });\n * -> 'Brad Pitt is 55 years old'\n *\n * Complex example mixing functions and ternaries :\n * const user = {\n *     name: 'James Bond',\n *     gender: 'male',\n *     balance: 15\n * }\n * Nanostache('Hello {{ isMale ? mr : mrs }} {{ getLastName }}. Your balance is {{ balance }}€.', {\n *   ...user,\n *   isMale: v => v.gender == 'male',\n *   getLastName: v => v.name.split(' ')[1]\n * });\n * -> 'Hello mr Bond. Your balance is 15€.'\n *\n * @param template Template to process with delimiters and values.\n * @param values One level deep value bag containing properties and values as scalar or functions\n */\nexport function Nanostache(template, values) {\n    return template.replace(delimitersRegex, (i, m) => matcher(m, values));\n}\n","import 'regenerator-runtime/runtime';\r\nimport 'better-dom/dist/better-dom';\r\nimport 'better-dateinput-polyfill/dist/better-dateinput-polyfill';\r\n\r\nimport DiffMatchPatch from 'diff-match-patch';\r\nimport { Nanostache } from '@solid-js/nanostache';\r\n\r\nconst requestHeaders = {\r\n\tmethod: 'GET',\r\n\theaders: {\r\n\t\t'Accept': 'application/json',\r\n\t\t'Content-Type': 'application/json'\r\n\t}\r\n}\r\n\r\nconst APIBaseURL = 'https://disinfo.quaidorsay.fr/api/open-terms-archive';\r\n\r\ndocument.addEventListener(\"DOMContentLoaded\", () => {\r\n\r\n\tconst $form_explorer = document.getElementById('form_explorer');\r\n\tconst $form_services = document.getElementById('form_services');\r\n\tconst $form_typeofdocuments = document.getElementById('form_typeofdocuments');\r\n\tconst $form_firstdocumentdate = document.getElementById('form_firstdocumentdate');\r\n\tconst $form_seconddocumentdate = document.getElementById('form_seconddocumentdate');\r\n\tconst $inputDates = document.querySelectorAll('input[type=date]');\r\n\tconst $datasetVersion = document.getElementsByClassName(\"datasetRelease\");\r\n\r\n\tif (window.fetch) {\r\n\t\tinit();\r\n\t} else {\r\n\t\tshowNotification('error', notificationsMsgs.browserSupport);\r\n\t}\r\n\r\n\tasync function init() {\r\n\t\tgetServices()\r\n\t\t\t.then(data => {\r\n\r\n\t\t\t\t//Init form control and listen form change\r\n\t\t\t\tsetMaxInputDateToNow()\r\n\t\t\t\tinitFormEventListener()\r\n\r\n\t\t\t\t//Populate form with data\r\n\t\t\t\tpopulateServices(data)\r\n\t\t\t\tpopulateTypeOfDocuments()\r\n\r\n\t\t\t\t//If no query string asked in URL\r\n\t\t\t\t//Select default service and documents\r\n\t\t\t\tconst queryStringData = getQueryStringData();\r\n\t\t\t\tif (Object.keys(queryStringData).length === 0) {\r\n\t\t\t\t\taddInURL('service', $form_services.selectedOptions.item(0).value);\r\n\t\t\t\t\taddInURL('typeofdocument', $form_typeofdocuments.selectedOptions.item(0).value)\r\n\t\t\t\t}\r\n\r\n\t\t\t\t//Update form with current state\r\n\t\t\t\twindow.addEventListener(\"popstate\", popStateHandler)\r\n\t\t\t\tpopStateHandler()\r\n\t\t\t})\r\n\t\tgetDatasetVersion()\r\n\t\t\t.then(data => {\r\n\t\t\t\tconst { lang, text } = releaseMsgs;\r\n\t\t\t\tconst translatedDate = new Date(data.dataset_date).toLocaleDateString(lang,{ year: 'numeric', month: 'long', day: 'numeric' })\r\n\t\t\t\t$datasetVersion[0].innerHTML = text.replace('{{releaseUrl}}', data.dataset_url).replace(\"{{releaseDate}}\", translatedDate);\r\n\t\t\t})\r\n\t}\r\n\r\n\tasync function async_fetch(url) {\r\n\t\tconst response = await fetch(url)\r\n\t\tif (response.ok) return response.json()\r\n\t\tthrow new Error(response.status)\r\n\t}\r\n\r\n\tasync function getServices() {\r\n\t\tconst request = new Request(APIBaseURL + '/list_services/v1/?multiple_versions_only=true', requestHeaders);\r\n\t\treturn async_fetch(request);\r\n\t}\r\n\r\n\tasync function getDatasetVersion() {\r\n\t\tconst request = new Request(APIBaseURL + '/version', requestHeaders);\r\n\t\treturn async_fetch(request);\r\n\t}\r\n\r\n\tasync function loadDocs() {\r\n\t\tconst formData = getFormData();\r\n\t\tconst doc1 = await getDoc(formData.service, formData.type, formData.firstDocumentDate);\r\n\t\tconst doc2 = await getDoc(formData.service, formData.type, formData.secondDocumentDate);\r\n\t\treturn Array(doc1, doc2);\r\n\t}\r\n\r\n\tasync function getDoc(service, type, date) {\r\n\t\tconst route = encodeURI(APIBaseURL + '/get_version_at_date/v1/' + service + '/' + type + '/' + date);\r\n\t\tconst request = new Request(route, requestHeaders);\r\n\t\tconst response = await fetch(request)\r\n\t\tif (response.ok) {\r\n\t\t\tconst data = await response.json()\r\n\t\t\tif (data.error) throw new Error(data.error)\r\n\t\t\tif (data.data == '') {\r\n\t\t\t\treturn await getDoc(service, type, data.next_version.substr(0, 10))\r\n\t\t\t} else return data;\r\n\t\t} else {\r\n\t\t\tthrow new Error(response.status)\r\n\t\t}\r\n\t}\r\n\r\n\tfunction initFormEventListener() {\r\n\t\t$form_explorer && $form_explorer.addEventListener('submit', submitHandler);\r\n\t\t$form_services && $form_services.addEventListener('change', onServiceChangeHandler);\r\n\t\t$form_typeofdocuments && $form_typeofdocuments.addEventListener('change', onTypeOfDocumentChangeHandler);\r\n\t\t$form_firstdocumentdate && $form_firstdocumentdate.addEventListener('change', onDateChange);\r\n\t\t$form_seconddocumentdate && $form_seconddocumentdate.addEventListener('change', onDateChange);\r\n\t}\r\n\r\n\tfunction populateServices(services) {\r\n\t\tconst servicesArray = Object.entries(services);\r\n\t\tconst sortedServices = sortAlphabeticallyServices(servicesArray);\r\n\t\tsortedServices && sortedServices.forEach(element => {\r\n\t\t\tconst option = new Option(element[0], element[0]);\r\n\t\t\toption.classList.add('font-marianne');\r\n\t\t\toption.dataset.typeofdocuments = sortAlphabeticallyTypeOfDocuments(element[1]);\r\n\t\t\t$form_services.add(option);\r\n\t\t});\r\n\t}\r\n\r\n\tfunction populateTypeOfDocuments() {\r\n\t\t$form_typeofdocuments.innerHTML = '';\r\n\t\tconst typesofdocuments = $form_services.selectedOptions.item(0).dataset.typeofdocuments.split(',');\r\n\t\tif (typesofdocuments) {\r\n\t\t\tconst sortedTypeOfDocuments = sortAlphabeticallyTypeOfDocuments(typesofdocuments);\r\n\t\t\tsortedTypeOfDocuments && sortedTypeOfDocuments.forEach(type => {\r\n\t\t\t\t$form_typeofdocuments.add(new Option(type, type));\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\tfunction popStateHandler(event) {\r\n\t\tconst queryStringData = getQueryStringData();\r\n\t\tremoveDiff();\r\n\t\tremoveLegend();\r\n\t\tremoveNotification();\r\n\t\tupdateFormValues();\r\n\r\n\t\t//If action submit asked\r\n\t\tif (queryStringData.action == \"submit\") {\r\n\r\n\t\t\t//https://stackoverflow.com/questions/49587933/firefox-doesnt-preventing-dispatched-submit-event\r\n\t\t\t$form_explorer.dispatchEvent(new Event('submit', {\r\n\t\t\t\tcancelable: true\r\n\t\t\t}));\r\n\t\t}\r\n\t}\r\n\r\n\tfunction getQueryStringData() {\r\n\t\tconst urlParams = new URLSearchParams(window.location.search);\r\n\t\tconst queryStringData = Object.fromEntries(urlParams);\r\n\t\treturn queryStringData;\r\n\t}\r\n\r\n\tfunction updateFormValues() {\r\n\t\tconst queryStringData = getQueryStringData();\r\n\r\n\t\tlet errogMsg = '';\r\n\r\n\t\t//Update service\r\n\t\tif (queryStringData.service) {\r\n\t\t\tif ($form_services) {\r\n\t\t\t\tconst option = isSelectOptionExist($form_services, queryStringData.service);\r\n\t\t\t\tif (option) {\r\n\t\t\t\t\toption.setAttribute('selected', 'selected');\r\n\t\t\t\t\tpopulateTypeOfDocuments();\r\n\t\t\t\t} else {\r\n\t\t\t\t\terrogMsg = errogMsg.concat('This service is not available');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t//Update type of document\r\n\t\tif (queryStringData.typeofdocument) {\r\n\t\t\tif ($form_typeofdocuments) {\r\n\t\t\t\tconst option = isSelectOptionExist($form_typeofdocuments, queryStringData.typeofdocument);\r\n\t\t\t\tif (option) {\r\n\t\t\t\t\toption.setAttribute('selected', 'selected');\r\n\t\t\t\t} else {\r\n\t\t\t\t\tconsole.log('Type of document is not valid for this service')\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t//Update date1\r\n\t\tif (queryStringData.date1) {\r\n\t\t\tif ($form_firstdocumentdate) {\r\n\t\t\t\t$form_firstdocumentdate.value = queryStringData.date1;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t//Update date2\r\n\t\tif (queryStringData.date2) {\r\n\t\t\tif ($form_seconddocumentdate) {\r\n\t\t\t\t$form_seconddocumentdate.value = queryStringData.date2;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t//If error msg to display\r\n\t\tif (errogMsg != '') showNotification('error', errogMsg);\r\n\t}\r\n\r\n\tfunction isSelectOptionExist($target, value) {\r\n\t\treturn $target.querySelector('[value=\"' + value + '\"]');\r\n\t}\r\n\r\n\tfunction addInURL(key, value) {\r\n\t\tconst queryStringData = getQueryStringData();\r\n\t\tconst url = new URL(window.location);\r\n\t\tif ((url.searchParams.get(key) != null || url.searchParams.get(key) != value) || Object.keys(queryStringData).length == 0) {\r\n\t\t\turl.searchParams.set(key, value);\r\n\t\t\twindow.history.pushState({}, '', url);\r\n\t\t\twindow.dispatchEvent(new Event('popstate'));\r\n\t\t}\r\n\t}\r\n\r\n\tfunction removeInURL(key) {\r\n\t\tconst url = new URL(window.location);\r\n\t\turl.searchParams.delete(key);\r\n\t\twindow.history.pushState({}, '', url);\r\n\t\twindow.dispatchEvent(new Event('popstate'));\r\n\t}\r\n\r\n\tfunction onServiceChangeHandler(event) {\r\n\t\tpopulateTypeOfDocuments();\r\n\t\taddInURL('service', $form_services.selectedOptions.item(0).value);\r\n\t\tonTypeOfDocumentChangeHandler()\r\n\t}\r\n\r\n\tfunction onTypeOfDocumentChangeHandler(event) {\r\n\t\taddInURL('typeofdocument', $form_typeofdocuments.selectedOptions.item(0).value);\r\n\t}\r\n\r\n\tfunction sortAlphabeticallyTypeOfDocuments(types) {\r\n\t\treturn types.sort((a, b) => {\r\n\t\t\treturn (a < b) ? -1 : (a > b) ? 1 : 0;\r\n\t\t})\r\n\t}\r\n\r\n\tfunction sortAlphabeticallyServices(services) {\r\n\t\treturn services.sort((a, b) => {\r\n\t\t\treturn (a[0] < b[0]) ? -1 : (a[0] > b[0]) ? 1 : 0;\r\n\t\t})\r\n\t}\r\n\r\n\tfunction onDateChange(event) {\r\n\t\tconst currentDateKey = (event.target.id == 'form_firstdocumentdate') ? 'date1' : 'date2';\r\n\t\taddInURL(currentDateKey, event.target.value);\r\n\t}\r\n\r\n\tfunction submitHandler(event) {\r\n\t\tevent.preventDefault();\r\n\t\tconst formData = getFormData();\r\n\t\tif (isValidForm()) {\r\n\t\t\tloadDocs()\r\n\t\t\t\t.then((docs) => {\r\n\t\t\t\t\tshowDiff(docs)\r\n\t\t\t\t\tshowLegend()\r\n\t\t\t\t\tshowDatesInfos(docs)\r\n\t\t\t\t})\r\n\t\t}\r\n\t}\r\n\r\n\tfunction getFormData() {\r\n\t\tconst formData = new FormData($form_explorer);\r\n\t\tconst service = formData.get('form_services');\r\n\t\tconst type = formData.get('form_typeofdocuments');\r\n\t\tconst firstDocumentDate = formData.get('form_firstdocumentdate');\r\n\t\tconst secondDocumentDate = formData.get('form_seconddocumentdate');\r\n\t\treturn {\r\n\t\t\tservice: service,\r\n\t\t\ttype: type,\r\n\t\t\tfirstDocumentDate: firstDocumentDate,\r\n\t\t\tsecondDocumentDate: secondDocumentDate,\r\n\t\t};\r\n\t}\r\n\r\n\tfunction isValidForm() {\r\n\t\tconst formData = getFormData();\r\n\t\tif (formData.service && formData.type && formData.firstDocumentDate && formData.secondDocumentDate) return true;\r\n\t\treturn false;\r\n\t}\r\n\r\n\tfunction showDatesInfos(docs) {\r\n\t\tconst formData = getFormData();\r\n\t\tconst firstDocumentDate = dateToDMY(formData.firstDocumentDate);\r\n\t\tconst secondDocumentDate = dateToDMY(formData.secondDocumentDate);\r\n\t\tconst firstDocumentVersionAtDate = dateToDMY(docs[0].version_at_date.substr(0, 10));\r\n\t\tconst secondDocumentVersionAtDate = dateToDMY(docs[1].version_at_date.substr(0, 10));\r\n\r\n\t\tlet msg = Nanostache(notificationsMsgs.dateClosest, {\r\n\t\t\tfirstDocumentDate: firstDocumentDate,\r\n\t\t\tsecondDocumentDate: secondDocumentDate,\r\n\t\t\tfirstDocumentVersionAtDate: firstDocumentVersionAtDate,\r\n\t\t\tsecondDocumentVersionAtDate: secondDocumentVersionAtDate,\r\n\t\t\tDate,\r\n\t\t});\r\n\r\n\t\t//If dates are the equals\r\n\t\tif (docs[0].version_at_date == docs[1].version_at_date) {\r\n\t\t\tmsg = Nanostache(notificationsMsgs.nothingToCompare, {\r\n\t\t\t\tonlyDocumentDate: firstDocumentDate,\r\n\t\t\t});;\r\n\t\t}\r\n\r\n\t\tshowNotification('info', msg)\r\n\t}\r\n\r\n\tasync function showDiff(docs) {\r\n\t\tconst dmp = new DiffMatchPatch();\r\n\t\tconst diff = dmp.diff_main(docs[0].data, docs[1].data);\r\n\t\tconst diffPrettyHtml = prettyHTMLDiff(diff);\r\n\t\tconst $diffContent = document.createElement('DIV');\r\n\t\t$diffContent.classList.add('diffviewer_content');\r\n\t\t$diffContent.innerHTML = diffPrettyHtml;\r\n\t\tconst $diffviewer = document.createElement('DIV');\r\n\t\t$diffviewer.classList.add('diffviewer');\r\n\t\t$diffviewer.append($diffContent);\r\n\t\tif ($form_explorer) insertAfter($diffviewer, $form_explorer)\r\n\t}\r\n\r\n\tfunction showLegend() {\r\n\t\tremoveLegend()\r\n\t\tconst $legend = document.createElement('DIV');\r\n\t\t$legend.classList.add('legend');\r\n\t\tconst $legend_item1 = document.createElement('DIV');\r\n\t\tconst $legend_item2 = document.createElement('DIV');\r\n\t\t$legend_item1.classList.add('legend_item');\r\n\t\t$legend_item2.classList.add('legend_item');\r\n\t\t$legend_item1.innerHTML = legendMsg.add;\r\n\t\t$legend_item2.innerHTML = legendMsg.remove;\r\n\t\t$legend.append($legend_item1);\r\n\t\t$legend.append($legend_item2);\r\n\t\tif ($form_explorer) insertAfter($legend, $form_explorer)\r\n\t}\r\n\r\n\tfunction removeLegend() {\r\n\t\t[...document.getElementsByClassName(\"legend\")].map(n => n && n.remove());\r\n\t}\r\n\r\n\tfunction removeDiff() {\r\n\t\t[...document.getElementsByClassName(\"diffviewer\")].map(n => n && n.remove());\r\n\t}\r\n\r\n\tfunction showNotification(type, msg) {\r\n\t\tremoveNotification();\r\n\t\tconst $notification = document.createElement('DIV');\r\n\t\t$notification.classList.add('notification');\r\n\t\t$notification.classList.add('notification-' + type);\r\n\t\tconst $notification_content = document.createElement('DIV');\r\n\t\t$notification_content.classList.add('notification_content');\r\n\t\t$notification_content.innerHTML = msg;\r\n\t\t$notification.append($notification_content);\r\n\t\tif ($form_explorer) insertAfter($notification, $form_explorer)\r\n\t}\r\n\r\n\tfunction removeNotification() {\r\n\t\t[...document.getElementsByClassName(\"notification\")].map(n => n && n.remove());\r\n\t}\r\n\r\n\tfunction insertAfter(el, referenceNode) {\r\n\t\treferenceNode.parentNode.insertBefore(el, referenceNode.nextSibling);\r\n\t}\r\n\r\n\tfunction prettyHTMLDiff(diff) {\r\n\t\tvar DIFF_DEconstE = -1;\r\n\t\tvar DIFF_INSERT = 1;\r\n\t\tvar DIFF_EQUAL = 0;\r\n\t\tvar html = [];\r\n\t\tvar pattern_amp = /&/g;\r\n\t\tvar pattern_lt = /</g;\r\n\t\tvar pattern_gt = />/g;\r\n\t\tvar pattern_para = /\\n/g;\r\n\t\tfor (var x = 0; x < diff.length; x++) {\r\n\t\t\tvar op = diff[x][0]; // Operation (insert, deconste, equal)\r\n\t\t\tvar data = diff[x][1]; // Text of change.\r\n\t\t\tvar text = data.replace(pattern_amp, '&amp;').replace(pattern_lt, '&lt;')\r\n\t\t\t\t.replace(pattern_gt, '&gt;').replace(pattern_para, '<br>');\r\n\t\t\tswitch (op) {\r\n\t\t\t\tcase DIFF_INSERT:\r\n\t\t\t\t\thtml[x] = '<ins>' + text + '</ins>';\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase DIFF_DEconstE:\r\n\t\t\t\t\thtml[x] = '<del>' + text + '</del>';\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase DIFF_EQUAL:\r\n\t\t\t\t\thtml[x] = '<span>' + text + '</span>';\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn html.join('');\r\n\t}\r\n\r\n\tfunction setMaxInputDateToNow() {\r\n\t\t$inputDates.forEach($inputDate => {\r\n\t\t\t$inputDate.setAttribute('max', new Date().toISOString().split(\"T\")[0]);\r\n\t\t});\r\n\t}\r\n\r\n\tfunction dateToDMY(dateToFormat) {\r\n\t\tconst date = new Date(dateToFormat);\r\n\t\treturn date.toLocaleString('default', {\r\n\t\t\tday: '2-digit',\r\n\t\t\tmonth: '2-digit',\r\n\t\t\tyear: 'numeric'\r\n\t\t});\r\n\t}\r\n});\r\n"]}